(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    296133,       6411]
NotebookOptionsPosition[    278246,       6108]
NotebookOutlinePosition[    278680,       6125]
CellTagsIndexPosition[    278637,       6122]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["DSC 101: Wed 18 Sep", "Subsection",
 CellChangeTimes->{{3.934816906427898*^9, 3.9348169455050507`*^9}, {
  3.9349846121454983`*^9, 3.9349846132351027`*^9}, {3.935003980815793*^9, 
  3.9350039817970343`*^9}, {3.935419863677557*^9, 
  3.935419863944694*^9}},ExpressionUUID->"9d308f56-fc00-4135-9a93-\
69f333e89fe7"],

Cell[CellGroupData[{

Cell["Commands covered", "Subsubsection",
 CellChangeTimes->{{3.93481696144162*^9, 3.9348169661565847`*^9}, 
   3.935006342205266*^9},ExpressionUUID->"3f952694-fccf-4103-8b59-\
772d1df38f1e"],

Cell["\<\
Read the \[OpenCurlyDoubleQuote]Lesson\[CloseCurlyDoubleQuote] below. These \
are mathematical commands not explained in Wolfram, An Elementary \
Introduction to the Wolfram Language\
\>", "Text",
 CellChangeTimes->{{3.934817090640691*^9, 3.9348171146464863`*^9}, {
  3.9349893315669394`*^9, 3.934989335203322*^9}, {3.935419886921261*^9, 
  3.93541992566573*^9}, {3.935421037052953*^9, 
  3.935421041787044*^9}},ExpressionUUID->"c30be2e8-8127-4da0-89ae-\
40c615f3903c"],

Cell[CellGroupData[{

Cell["Important:", "Subsubsubsection",
 CellChangeTimes->{{3.934437327942857*^9, 
  3.934437357589756*^9}},ExpressionUUID->"c1c32a60-8937-47c3-8309-\
63f106fc1e65"],

Cell[BoxData[{
 RowBox[{"/.", 
  RowBox[{",", 
   RowBox[{"->", 
    RowBox[{"(*", " ", 
     RowBox[{"->", " ", 
      RowBox[{
       RowBox[{"is", " ", "hyphen", " ", "plus", " ", "greater"}], "-", 
       "than"}]}], " ", "*)"}], "\n", "Solve"}], ",", " ", 
   "NSolve"}]}], "\n", "FindRoot", "\n", 
 RowBox[{"Plot", ",", "ContourPlot"}], "\n", 
 RowBox[{"ReplaceAll", ",", "Rule"}], "\n"}], "Input",
 Evaluatable->False,
 AutoIndent->False,
 CellChangeTimes->{{3.93443653511981*^9, 3.9344365409620247`*^9}, {
   3.934436637376986*^9, 3.9344366409417267`*^9}, {3.93443670535305*^9, 
   3.9344367581488523`*^9}, {3.9344368452353888`*^9, 3.934436917957253*^9}, {
   3.934436977115576*^9, 3.934437059398491*^9}, {3.9344370922686443`*^9, 
   3.9344371397693577`*^9}, {3.93481716299302*^9, 3.9348171745698557`*^9}, {
   3.934817291832657*^9, 3.934817330938684*^9}, 3.9348173730840673`*^9, {
   3.934817506226528*^9, 3.934817516088763*^9}, {3.9349852147050056`*^9, 
   3.934985222160227*^9}, {3.934985326217162*^9, 3.9349854198197308`*^9}, {
   3.934985562933004*^9, 3.934985564136931*^9}, {3.934985680486277*^9, 
   3.934985691562888*^9}, {3.935419931876869*^9, 3.935420037089405*^9}, {
   3.935421078255563*^9, 3.9354210859280643`*^9}, {3.935424434436372*^9, 
   3.935424450773913*^9}, {3.935438732811123*^9, 3.935438812667008*^9}},
 AutoStyleOptions->{
 "HighlightSyntaxErrors"->
  False},ExpressionUUID->"87b7d30b-c8ca-439a-bcda-eb1888972434"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Secondary:", "Subsubsubsection",
 CellChangeTimes->{{3.934437367357974*^9, 
  3.934437370398466*^9}},ExpressionUUID->"b33dc5c6-d928-4618-89c8-\
4ec460caee11"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Reals", ",", " ", "Integers", ",", " ", "Complexes"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"domains", ";", " ", 
    RowBox[{"not", " ", "commands"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"Root", ",", "N"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "we", " ", "have", " ", "seen", " ", "N", " ", "in", " ", "class"}], ";", 
    " ", 
    RowBox[{"look", " ", "it", " ", "up"}]}], " ", 
   "*)"}]}], "\n", "FullSimplify"}], "Input",
 Evaluatable->False,
 AutoIndent->False,
 CellChangeTimes->{{3.93443653511981*^9, 3.9344365409620247`*^9}, {
   3.934436637376986*^9, 3.9344366409417267`*^9}, {3.93443670535305*^9, 
   3.9344367581488523`*^9}, {3.9344368452353888`*^9, 3.934436917957253*^9}, {
   3.934436977115576*^9, 3.934436999544231*^9}, {3.934437111001931*^9, 
   3.934437111827483*^9}, {3.9344371802529593`*^9, 3.934437195299774*^9}, {
   3.9348170303710737`*^9, 3.934817031976392*^9}, {3.9348171964253798`*^9, 
   3.934817205180237*^9}, {3.934817273027775*^9, 3.934817283704191*^9}, {
   3.9348173539021873`*^9, 3.934817398938004*^9}, {3.934817468103712*^9, 
   3.934817526636269*^9}, 3.934817610993227*^9, 3.934817902276567*^9, {
   3.9349853985882063`*^9, 3.934985456253957*^9}, 3.935421618261118*^9, 
   3.935438832868107*^9, {3.935441418857872*^9, 3.935441419509293*^9}, {
   3.935441517581463*^9, 3.935441534644248*^9}, {3.935442875314823*^9, 
   3.93544287867845*^9}},
 AutoStyleOptions->{
 "HighlightSyntaxErrors"->
  False},ExpressionUUID->"f34d7a27-4fa3-48a8-a337-33ba69a205f9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Unimportant", "Subsubsubsection",
 CellChangeTimes->{{3.934437380967608*^9, 
  3.934437383416052*^9}},ExpressionUUID->"06bb7fd7-6a5c-4a0e-9e06-\
c2de1df53cd5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MaxRoots", ",", " ", "InfiniteLine"}], "\n"}]], "Input",
 Evaluatable->False,
 AutoIndent->False,
 CellChangeTimes->{{3.934436804160102*^9, 3.934436823408477*^9}, 
   3.9344369815715446`*^9, {3.934437221001005*^9, 3.934437224871773*^9}, 
   3.934440975374309*^9, {3.934816977125053*^9, 3.934817017438683*^9}, {
   3.934817225714385*^9, 3.934817226943205*^9}, 3.934817382613678*^9, {
   3.934985538133239*^9, 3.934985546749085*^9}, {3.934985582761771*^9, 
   3.934985588587284*^9}, {3.934985635194796*^9, 3.934985650846538*^9}, 
   3.9354216324125843`*^9, {3.935439551587823*^9, 3.9354395639687757`*^9}, {
   3.935441405103488*^9, 3.935441431488168*^9}},
 AutoStyleOptions->{
 "HighlightSyntaxErrors"->
  False},ExpressionUUID->"02ce12a8-22b8-44dd-8c24-5ed205710951"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Lesson (to be done before class)", "Subsubsection",
 CellChangeTimes->{{3.934818878159485*^9, 3.934818881473888*^9}, {
  3.934836008415468*^9, 3.934836015355835*^9}, {3.9354210061362143`*^9, 
  3.935421049810213*^9}},ExpressionUUID->"61c11ddb-f42a-49ad-bcc6-\
952fae77bc30"],

Cell["\<\
There will be a quiz on using the important commands at the beginning of \
class.\
\>", "Text",
 CellChangeTimes->{{3.93544306885561*^9, 
  3.935443092929504*^9}},ExpressionUUID->"6c77210f-4984-4cbe-b0f9-\
032bdbf0e357"],

Cell[CellGroupData[{

Cell["The documentation center", "Subsubsubsection",
 CellChangeTimes->{{3.9354215930800543`*^9, 
  3.935421605519483*^9}},ExpressionUUID->"475cd7f4-cf47-427c-9b20-\
8eed2ca8f54b"],

Cell[TextData[{
 "First take some time to familiarize yourself with the structure of the \
documentation pages of basic commands. For instance, for Solve[], a command \
we will be using (web link: ",
 Cell[BoxData[
  TemplateBox[{
   "\"http://reference.wolfram.com/language/ref/Solve.html\"", 
    "http://reference.wolfram.com/language/ref/Solve.html"},
   "HyperlinkURL"]], "Input",
  TextClipboardType->"PlainText",ExpressionUUID->
  "bf817502-c6b7-4bf8-8127-47afab6a620d"],
 ")."
}], "Text",
 CellChangeTimes->{{3.935421211621519*^9, 3.935421343106299*^9}, {
  3.9354231081794157`*^9, 
  3.9354231082756157`*^9}},ExpressionUUID->"b168cd80-92db-457d-afb7-\
106149107d67"],

Cell["\<\
In the web version, the page for the command sits inside a couple of frames. \
At the very top, there is a header for the Wolfram company; below that, a \
Documentation Center header; finally, next is the documentation page for the \
command. If you have installed the documentation on your computer, the first \
two headers will be missing.\
\>", "Text",
 CellChangeTimes->{{3.935421398466432*^9, 3.935421563720747*^9}, 
   3.9354216515345287`*^9},ExpressionUUID->"d3e4adc8-da92-4cfc-9f60-\
5f5ec7e7c982"],

Cell["\<\
The documentation itself had a header with the kind of page indicated inside \
a blue rectangle on the left. It should read \[OpenCurlyDoubleQuote]BUILT-IN \
SYMBOL\[CloseCurlyDoubleQuote] for a command like Solve[]. Toward the right \
will be drop-down menus with links to related documentation pages. These vary \
from command to command.\
\>", "Text",
 CellChangeTimes->{{3.935421663314745*^9, 3.9354218144595337`*^9}, {
  3.935423088815228*^9, 
  3.935423089056031*^9}},ExpressionUUID->"51b57f53-351d-4a50-9910-\
c4739f85d72e"],

Cell[TextData[{
 "The first important segment of the documentation is contained in a light \
blue rectangle. It contains ",
 StyleBox["\[OpenCurlyDoubleQuote]paradigms\[CloseCurlyDoubleQuote]",
  FontWeight->"Bold"],
 " of common uses of the command. They indicate the main things you can learn \
how to do on this page. Once you\[CloseCurlyQuote]re somewhat familiar with a \
command, they are a quick reminder of how to use, which argument comes first, \
which is second, and so forth."
}], "Text",
 CellChangeTimes->{{3.935421844888763*^9, 3.935421850032827*^9}, {
  3.9354219449837418`*^9, 
  3.9354220817357397`*^9}},ExpressionUUID->"e9fdb406-a961-408a-a848-\
7b5ce2f6a6e3"],

Cell[TextData[{
 "The next section is called ",
 StyleBox["\[OpenCurlyDoubleQuote]Details and \
Options.\[CloseCurlyDoubleQuote]",
  FontWeight->"Bold"],
 " You need to click on it to see what it contains. It\[CloseCurlyQuote]s \
difficult to describe the importance of this section. Sometimes the details \
are arcane and hard to understand. Sometimes they\[CloseCurlyQuote]re \
crucial. For a beginner, I would say that if something is not working how you \
thought it would, you might skim through it to see if anything seems related. \
If so, read it and try to apply it to your problem. If you cannot figure it \
out, ask someone, like me."
}], "Text",
 CellChangeTimes->{{3.9354221147879753`*^9, 3.935422142599044*^9}, {
  3.935422227867032*^9, 3.935422249395041*^9}, {3.935422281721718*^9, 
  3.935422416817231*^9}, {3.935422499929751*^9, 
  3.935422501652545*^9}},ExpressionUUID->"d0378a6d-344d-4f4b-8f5b-\
7d0def50631a"],

Cell[TextData[{
 "The next section, \[OpenCurlyDoubleQuote]Examples,\[CloseCurlyDoubleQuote] \
comprises several subsections. The most important at this point will be ",
 StyleBox["\[OpenCurlyDoubleQuote]Basic Examples.\[CloseCurlyDoubleQuote]",
  FontWeight->"Bold"],
 " These examples show how the command works in basic applications. \
\[OpenCurlyDoubleQuote]Scope\[CloseCurlyDoubleQuote] shows the range of \
problems the command can address. \[OpenCurlyDoubleQuote]Generalizations & \
Extensions,\[CloseCurlyDoubleQuote] \[OpenCurlyDoubleQuote]Applications,\
\[CloseCurlyDoubleQuote] and \[OpenCurlyDoubleQuote]Properties & Relations\
\[CloseCurlyDoubleQuote] give more examples organized according to those \
titles. They tend to be overlapping categories, and it\[CloseCurlyQuote]s not \
worth worrying about what the exact differences are. The second ",
 StyleBox["\[OpenCurlyDoubleQuote]Options\[CloseCurlyDoubleQuote]",
  FontWeight->"Bold"],
 " describes the options for the command. For some commands, like Plot[], \
beginning users often need to use options to get the output they want. For \
others, like Solve[], they almost never use options. The plotting commands \
generally have too many options for a beginning to tackle. Sometimes typing = \
with a description leads you to the option you need to read about:"
}], "Text",
 CellChangeTimes->{{3.935422517858564*^9, 3.935422561118012*^9}, {
  3.935422684337431*^9, 3.935422684566924*^9}, {3.9354227189570417`*^9, 
  3.9354227837127447`*^9}, {3.935422856502392*^9, 3.935422882874452*^9}, {
  3.9354229246308928`*^9, 3.935423082611689*^9}, {3.935423123127215*^9, 
  3.93542317868783*^9}, {3.9354232628097677`*^9, 
  3.9354233253884907`*^9}},ExpressionUUID->"199a45f4-87dc-4cc0-b432-\
9dd0be406a7e"],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "plot sin(x) with a grid", Typeset`newq$$ = 
   "plot sin(x) with a grid", Typeset`chosen$$ = 
   "Plot[Sin[x], {x, -2*Pi, 2*Pi}, GridLines -> Automatic]", Typeset`open$$ = 
   False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{11., {1.643798828125, 9.356201171875}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{11., {1.643798828125, 9.356201171875}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "plot sin(x) with a grid", 
                  Defer[
                   Plot[
                    Sin[$CellContext`x], {$CellContext`x, (-2) Pi, 2 Pi}, 
                    GridLines -> Automatic]], "Fast parse"]; 
                Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"Plot", "[", 
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{
                    RowBox[{"-", "2"}], "*", "Pi"}], ",", " ", 
                    RowBox[{"2", "*", "Pi"}]}], "}"}], ",", " ", 
                   RowBox[{"GridLines", " ", "->", " ", "Automatic"}]}], "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"Plot", "[", 
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{
                    RowBox[{"-", "2"}], "*", "Pi"}], ",", " ", 
                    RowBox[{"2", "*", "Pi"}]}], "}"}], ",", " ", 
                   RowBox[{"GridLines", " ", "->", " ", "Automatic"}]}], "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{
                    RowBox[{"-", "2"}], "*", "Pi"}], ",", " ", 
                    RowBox[{"2", "*", "Pi"}]}], "}"}], ",", " ", 
                    RowBox[{"GridLines", " ", "->", " ", "Automatic"}]}], 
                    "]"}]], "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "plot sin(x) with a grid", 
                    Defer[
                    Plot[
                    Sin[$CellContext`x], {$CellContext`x, (-2) Pi, 2 Pi}, 
                    GridLines -> Automatic]], "Fast parse"]; 
                    Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{
                    RowBox[{"-", "2"}], "*", "Pi"}], ",", " ", 
                    RowBox[{"2", "*", "Pi"}]}], "}"}], ",", " ", 
                    RowBox[{"GridLines", " ", "->", " ", "Automatic"}]}], 
                    "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{
                    RowBox[{"-", "2"}], "*", "Pi"}], ",", " ", 
                    RowBox[{"2", "*", "Pi"}]}], "}"}], ",", " ", 
                    RowBox[{"GridLines", " ", "->", " ", "Automatic"}]}], 
                    "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{
                    RowBox[{"-", "2"}], "*", "Pi"}], ",", " ", 
                    RowBox[{"2", "*", "Pi"}]}], "}"}], ",", " ", 
                    RowBox[{"GridLines", " ", "->", " ", "Automatic"}]}], 
                    "]"}]], "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->
  "In[160]:=",ExpressionUUID->"97c26faf-c2f8-47a6-bff4-e8cdb4605af7"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{(-2) Pi, 2 Pi}, {-0.9999996658276197, 
             0.9999993650500513}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{(-2) Pi, 2 Pi}, {-0.9999996658276197, 
            0.9999993650500513}}, "Frame" -> {{False, False}, {False, False}},
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
          "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
          GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{110.408076171875, 
       248.591923828125}, {-13.951904296875028`, 7.219970703124972}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, 
       "PlotRange" -> {{(-2) Pi, 2 Pi}, {-0.9999996658276197, 
         0.9999993650500513}}, "Frame" -> {{False, False}, {False, False}}, 
       "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
       "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
       GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{(-2) Pi, 2 Pi}, {-0.9999996658276197, 
     0.9999993650500513}}, {{-6.283185307179586, 
    6.283185307179586}, {-0.9999996658276197, 0.9999993650500513}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.935423245437294*^9},
 CellLabel->
  "Out[160]=",ExpressionUUID->"2d942b11-d313-480d-9665-f6eea8da3d34"]
}, Open  ]],

Cell["\<\
To learn Plot[], I often skimmed the example until I found something close to \
what I wanted. Then I tried to modify the example to do exactly what I wanted.\
\>", "Text",
 CellChangeTimes->{{3.9354234675070353`*^9, 3.935423484430994*^9}, {
  3.9354235273898287`*^9, 
  3.9354236029975452`*^9}},ExpressionUUID->"496f860f-641e-4f66-8ef3-\
2522f7428563"],

Cell["\<\
Below the \[OpenCurlyDoubleQuote]Examples\[CloseCurlyDoubleQuote] is the \
\[OpenCurlyDoubleQuote]See Also\[CloseCurlyDoubleQuote] section. Sometimes \
the first command you look up isn\[CloseCurlyQuote]t exactly the one you \
want. In this section are links to related commands, and you may find the one \
you\[CloseCurlyQuote]re looking for here.\
\>", "Text",
 CellChangeTimes->{{3.9354267130505857`*^9, 
  3.935426787616087*^9}},ExpressionUUID->"3615e0a0-6174-4e39-a797-\
ce5946825393"],

Cell["\<\
Next are links to other related resources. \[OpenCurlyDoubleQuote]Tech Notes\
\[CloseCurlyDoubleQuote] are tutorials that go through a topic instead of \
focusing on a single command. \[OpenCurlyDoubleQuote]Guides\
\[CloseCurlyDoubleQuote] have links to commands and other resources related \
to the subjects in their titles.\
\>", "Text",
 CellChangeTimes->{{3.9354268191469507`*^9, 
  3.935426926514964*^9}},ExpressionUUID->"e7111da6-8475-49ff-b6b8-\
08108cdb702b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The documentation search bar", "Subsubsubsection",
 CellChangeTimes->{{3.9354269966508703`*^9, 
  3.935427002855261*^9}},ExpressionUUID->"63b83ac2-16f6-4aa3-bef3-\
878df857870e"],

Cell["\<\
There are two kinds of searches that it will perform: Search for a command \
page and search for pages related to the keyword(s) you type in. If you type \
in one word and it matches a command, you\[CloseCurlyQuote]ll get the page \
for that command. Otherwise, you will get a list of related documentation \
pages. It is case-sensitive! Searching for \[OpenCurlyDoubleQuote]Solve\
\[CloseCurlyDoubleQuote] gets you the page for Solve[]. Searching for \
\[OpenCurlyDoubleQuote]solve\[CloseCurlyDoubleQuote] gets you pages related \
to solving all sorts of things. You can also use a web search engine to find \
Wolfram documentation. Of course, if you search for \
\[OpenCurlyDoubleQuote]solve,\[CloseCurlyDoubleQuote] you probably will need \
to include other keywords like \[OpenCurlyDoubleQuote]Mathematica\
\[CloseCurlyDoubleQuote] or \[OpenCurlyDoubleQuote]Wolfram Language.\
\[CloseCurlyDoubleQuote]\
\>", "Text",
 CellChangeTimes->{{3.935427005252947*^9, 3.935427166332159*^9}, {
  3.935427212702149*^9, 
  3.935427284180375*^9}},ExpressionUUID->"b916a9f0-0684-420c-bee6-\
772761661d6f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Some basic \[OpenCurlyDoubleQuote]solvers\[CloseCurlyDoubleQuote]", \
"Subsubsubsection",
 CellChangeTimes->{{3.935424477228491*^9, 
  3.935424497003072*^9}},ExpressionUUID->"226274b0-0285-49f0-9145-\
eff7e323ce39"],

Cell["Look up the documentation pages of these basic \
\[OpenCurlyDoubleQuote]solvers\[CloseCurlyDoubleQuote]:", "Text",
 CellChangeTimes->{{3.935424512299726*^9, 
  3.935424528126503*^9}},ExpressionUUID->"ed1505bb-158b-482d-a54a-\
8cac0edc72e3"],

Cell[BoxData[{
 RowBox[{"Solve", ",", " ", "NSolve", ",", "FindRoot"}], "\n", 
 RowBox[{"Plot", ",", "ContourPlot"}], "\n"}], "Input",
 Evaluatable->False,
 AutoIndent->False,
 CellChangeTimes->{{3.93443653511981*^9, 3.9344365409620247`*^9}, {
   3.934436637376986*^9, 3.9344366409417267`*^9}, {3.93443670535305*^9, 
   3.9344367581488523`*^9}, {3.9344368452353888`*^9, 3.934436917957253*^9}, {
   3.934436977115576*^9, 3.934437059398491*^9}, {3.9344370922686443`*^9, 
   3.9344371397693577`*^9}, {3.93481716299302*^9, 3.9348171745698557`*^9}, {
   3.934817291832657*^9, 3.934817330938684*^9}, 3.9348173730840673`*^9, {
   3.934817506226528*^9, 3.934817516088763*^9}, {3.9349852147050056`*^9, 
   3.934985222160227*^9}, {3.934985326217162*^9, 3.9349854198197308`*^9}, {
   3.934985562933004*^9, 3.934985564136931*^9}, {3.934985680486277*^9, 
   3.934985691562888*^9}, {3.935419931876869*^9, 3.935420037089405*^9}, {
   3.935421078255563*^9, 3.9354210859280643`*^9}, {3.935424434436372*^9, 
   3.935424450773913*^9}, {3.935424549426303*^9, 3.935424558327423*^9}},
 AutoStyleOptions->{
 "HighlightSyntaxErrors"->
  False},ExpressionUUID->"0cb8b5a1-ccee-4d3a-9f16-434725e5962a"],

Cell[TextData[{
 "Four of them, excluding Plot[], solve equations, with ContourPlot[] showing \
a graphical solution. Recall that equation use a double-equals: ",
 Cell[BoxData[
  RowBox[{"lhs", "==", "rhs"}]], "Input",ExpressionUUID->
  "c38b118f-a790-4ba0-9bea-7fc38025f431"],
 ". From the \[OpenCurlyDoubleQuote]Basic Examples,\[CloseCurlyDoubleQuote] \
you should be able to figure out how to write code to solve the exercises at \
the end. Some further notes on solutions returned by Solve[], NSolve[], and \
FindRoot[] are added below."
}], "Text",
 CellChangeTimes->{{3.935424600631225*^9, 3.935424690063759*^9}, {
  3.935424906213025*^9, 3.935424940054267*^9}, {3.935425432671652*^9, 
  3.9354255314207153`*^9}},ExpressionUUID->"5ed7ea71-5a45-451c-b8fa-\
e720be387fdb"],

Cell[TextData[{
 "The first argument of a solver is a function, equation, or system of \
equations. The second argument specifies the variable of variables. If \
appropriate, the interval or starting value of the variable will need to be \
specified, too. In some cases, like ContourPlot[], you need two variable \
specifications (the second ",
 StyleBox["and third",
  FontSlant->"Italic"],
 " arguments)."
}], "Text",
 CellChangeTimes->{{3.935427334207609*^9, 3.935427439778035*^9}, {
  3.935427514752556*^9, 
  3.9354275474390507`*^9}},ExpressionUUID->"e9f11c48-5dda-415a-8418-\
ec5a17b2a3b4"],

Cell["\<\
For a system of equations, and list of equations and equations connected by \
And[] are considered equivalent, even though the code is not identical. \
Mathematica sometimes changes the code on you. Example of equivalent systems:\
\
\>", "Text",
 CellChangeTimes->{{3.935427606185511*^9, 
  3.935427718872786*^9}},ExpressionUUID->"43499c9c-ed75-44f1-8931-\
95e358f2032f"],

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"x", "^", "2"}], "+", 
     RowBox[{"y", "^", "2"}]}], "==", "5"}], ",", 
   RowBox[{"y", "==", 
    RowBox[{
     RowBox[{"x", "^", "2"}], "-", "3"}]}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"x", "^", "2"}], "+", 
    RowBox[{"y", "^", "2"}]}], "==", "5"}], "&&", 
  RowBox[{"y", "==", 
   RowBox[{
    RowBox[{"x", "^", "2"}], "-", "3"}]}]}]}], "Input",
 CellChangeTimes->{{3.93542764174545*^9, 
  3.935427651508382*^9}},ExpressionUUID->"0f398ec1-5a31-4399-b865-\
b400b454245a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Using solutions", "Subsubsubsection",
 CellChangeTimes->{{3.9354277347383957`*^9, 
  3.9354277368138647`*^9}},ExpressionUUID->"92022e07-1028-4fa2-a109-\
b9effaefaf85"],

Cell[TextData[{
 "To use a solution, you need to apply the solution with ReplaceAll[]. Look \
up the documentation page  for it. (Some of its basic examples touch on \
things we have not gotten to, so ignore the example that mentions \
\[OpenCurlyDoubleQuote]pattern.\[CloseCurlyDoubleQuote])  A solution is \
constructed using Rule[], which is normally written ",
 Cell[BoxData[
  RowBox[{"variable", " ", "->", " ", "value"}]], "Input",ExpressionUUID->
  "d6b7b28f-df20-44bf-b474-9f62c6ac66df"],
 ", where the arrow is typed by hyphen followed by a greater-than sign. It \
represents a substitution rule in which the variable is to be ",
 StyleBox["replaced",
  FontWeight->"Bold"],
 " by the value (in ",
 StyleBox["all",
  FontWeight->"Bold"],
 " occurrences of the variable)."
}], "Text",
 CellChangeTimes->{{3.935425536671225*^9, 3.935425652915097*^9}, {
  3.9354257166475563`*^9, 3.935425751706233*^9}, {3.935425850541644*^9, 
  3.935425935279502*^9}, {3.9354262586122*^9, 3.935426263894299*^9}, {
  3.935426315483672*^9, 
  3.935426447597477*^9}},ExpressionUUID->"6f896c37-3d66-4f52-8a44-\
f5aefaef35c5"],

Cell["\<\
Solve[] and NSolve[] return a solution set, represented by a List of \
solution. A solution has the form of a list of rules, one for each variable:\
\>", "Text",
 CellChangeTimes->{{3.9354257738086977`*^9, 3.935425813966243*^9}, {
  3.9354264583779182`*^9, 
  3.935426469856751*^9}},ExpressionUUID->"bc74d1c0-0c6e-4a04-8bf8-\
eac54f303ecd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"v1", "->", "val1"}], ",", 
   RowBox[{"v2", "->", "val2"}], ",", "..."}], "}"}]], "Input",
 CellChangeTimes->{{3.935425824557233*^9, 
  3.93542583504845*^9}},ExpressionUUID->"5a41569f-3d43-48d2-9d1f-\
9c472c72ef57"],

Cell["For instance:", "Text",
 CellChangeTimes->{{3.935425982414524*^9, 
  3.935426006288637*^9}},ExpressionUUID->"e39c1dd6-7871-4202-9073-\
f60f28cc1ccf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"x", "^", "2"}], "+", 
        RowBox[{"y", "^", "2"}]}], "==", "5"}], ",", 
      RowBox[{"y", "==", 
       RowBox[{
        RowBox[{"x", "^", "2"}], "-", "3"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.935426008134903*^9, 3.9354260698055153`*^9}},
 CellLabel->
  "In[163]:=",ExpressionUUID->"ad87114d-3476-4a9c-962d-e66428e0862d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", "2"}]}], ",", 
     RowBox[{"y", "\[Rule]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{"-", "2"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "1"}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{"-", "2"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "2"}], ",", 
     RowBox[{"y", "\[Rule]", "1"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9354260470708447`*^9, 3.935426070244506*^9}},
 CellLabel->
  "Out[163]=",ExpressionUUID->"a2728230-79e7-4fac-974e-915d78e542f7"]
}, Open  ]],

Cell[TextData[{
 "Then ",
 Cell[BoxData[
  RowBox[{"First", "[", "sol", "]"}]], "Input",ExpressionUUID->
  "07e54f30-8484-4887-8406-2588bc19169d"],
 " is the first solution,  ",
 Cell[BoxData[
  RowBox[{"Last", "[", "sol", "]"}]], "Input",ExpressionUUID->
  "bc039791-5f00-431c-871f-4486c47f2976"],
 " is the last solution, and  ",
 Cell[BoxData[
  RowBox[{"sol", "[", 
   RowBox[{"[", "3", "]"}], "]"}]], "Input",ExpressionUUID->
  "2c22336a-b393-45a4-852a-7e195a19546b"],
 " is the third solution. To plug in the last solution use ReplaceAll[], \
which is abbreviate \[OpenCurlyDoubleQuote]/.\[CloseCurlyDoubleQuote]:"
}], "Text",
 CellChangeTimes->{{3.935426089473816*^9, 3.9354261844236*^9}, {
  3.935426515271183*^9, 
  3.935426550151979*^9}},ExpressionUUID->"f3ad1abc-bd1b-42f8-ac56-\
7720a4f2a77b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"x", "^", "2"}], "+", 
      RowBox[{"y", "^", "2"}]}], "==", "5"}], ",", 
    RowBox[{"y", "==", 
     RowBox[{
      RowBox[{"x", "^", "2"}], "-", "3"}]}]}], "}"}], "/.", 
  RowBox[{"Last", "[", "sol", "]"}]}]], "Input",
 CellChangeTimes->{{3.9354265075517893`*^9, 3.9354265101119204`*^9}},
 CellLabel->
  "In[164]:=",ExpressionUUID->"01f89127-1a25-45a5-9c3b-df3d8978c45e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{3.9354265527570343`*^9},
 CellLabel->
  "Out[164]=",ExpressionUUID->"57affeb4-76a3-40f1-9e54-d0b5f61d31f4"]
}, Open  ]],

Cell["We can plug it into any expression:", "Text",
 CellChangeTimes->{{3.935426559733532*^9, 
  3.9354265733100843`*^9}},ExpressionUUID->"5af09325-65d7-40a6-bec9-\
da7fb586e7cb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"x", "^", "3"}], "+", 
   RowBox[{"y", "^", "3"}]}], "/.", 
  RowBox[{"Last", "[", "sol", "]"}]}]], "Input",
 CellChangeTimes->{{3.9354265075517893`*^9, 3.9354265101119204`*^9}, {
  3.935426574794368*^9, 3.935426587038637*^9}},
 CellLabel->
  "In[165]:=",ExpressionUUID->"2fd2a3d3-39a1-43b7-9c57-ace2a15c4329"],

Cell[BoxData["9"], "Output",
 CellChangeTimes->{3.935426588757477*^9},
 CellLabel->
  "Out[165]=",ExpressionUUID->"df4580d1-5d58-411d-bf4a-7ef618a8d807"]
}, Open  ]],

Cell["\<\
We can plug in all solutions at once, and we will obtain a list of values, \
one for each solution in order:\
\>", "Text",
 CellChangeTimes->{{3.9354266084569473`*^9, 
  3.9354266390997753`*^9}},ExpressionUUID->"8d432285-af80-4c4d-82a2-\
9e032d0be0fd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"x", "^", "3"}], "+", 
   RowBox[{"y", "^", "3"}]}], "/.", "sol"}]], "Input",
 CellChangeTimes->{{3.9354265075517893`*^9, 3.9354265101119204`*^9}, {
  3.935426574794368*^9, 3.935426587038637*^9}, {3.9354266421175423`*^9, 
  3.935426647795514*^9}},
 CellLabel->
  "In[166]:=",ExpressionUUID->"f5fefdfe-8df9-47be-a1ef-dde713603e3c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "7"}], ",", 
   RowBox[{"-", "9"}], ",", 
   RowBox[{"-", "7"}], ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{3.935426648530652*^9},
 CellLabel->
  "Out[166]=",ExpressionUUID->"9a0c3519-8e51-4c09-bff1-3a17c6d6c93d"]
}, Open  ]],

Cell[TextData[{
 "Note that when we applied a single solution ",
 Cell[BoxData[
  RowBox[{"Last", "[", "sol", "]"}]], "Input",ExpressionUUID->
  "589b8ce0-b002-4645-99d3-bcea8bb54d98"],
 ", we got number, and when we applied the full solution set ",
 Cell[BoxData[
 "sol"], "Input",ExpressionUUID->"c39ecd31-27f6-4a72-bfe2-958a5aa93725"],
 ", we got a list. that is, a set of values."
}], "Text",
 CellChangeTimes->{{3.935427751561306*^9, 3.9354278305409327`*^9}, {
   3.935432753722702*^9, 3.935432798343351*^9}, 
   3.9354341126409807`*^9},ExpressionUUID->"1eb32d05-92da-4133-8436-\
a7cd14df9bf6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Some notes on solvers", "Subsubsubsection",
 CellChangeTimes->{{3.935439001315757*^9, 
  3.935439012720381*^9}},ExpressionUUID->"ef608d13-eb5a-49fb-9543-\
8803711ebb45"],

Cell["\<\
For Solve[] and NSolve[], the variable specification is just the variable or \
List of variables.\
\>", "Text",
 CellChangeTimes->{{3.935439016833652*^9, 
  3.9354390649505*^9}},ExpressionUUID->"f1aa8e1d-5cb3-48c3-86df-b3b7df58a130"],

Cell[TextData[{
 "For FindRoot[], the variable specification is a list, ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"variable", ",", " ", "start"}], "}"}]], "Input",ExpressionUUID->
  "a25ee842-4dd3-446b-8eb3-b64c976bc827"],
 ", of the variable and the start value, or a List of such specifications:"
}], "Text",
 CellChangeTimes->{{3.9354390701212273`*^9, 3.9354390904741697`*^9}, {
   3.9354391379762983`*^9, 3.935439201253908*^9}, 
   3.935439299435543*^9},ExpressionUUID->"c982733b-4416-44c2-ae19-\
792d382f9b33"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"t", "^", "2"}], "+", "t", "-", " ", 
    RowBox[{"Cos", "[", "t", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0.1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9354392035199747`*^9, 3.935439240818873*^9}},
 CellLabel->
  "In[178]:=",ExpressionUUID->"cfc93ffb-753b-46ff-a808-7cb7fef6ac80"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", "\[Rule]", "0.5500093499272624`"}], "}"}]], "Output",
 CellChangeTimes->{{3.935439229165203*^9, 3.9354392413744783`*^9}},
 CellLabel->
  "Out[178]=",ExpressionUUID->"29b269b1-d3b7-4359-b71e-ea50c19f3568"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x", "^", "2"}], "+", 
       RowBox[{"y", "^", "2"}]}], "==", "5"}], ",", 
     RowBox[{"y", "==", 
      RowBox[{
       RowBox[{"x", "^", "2"}], "-", "3"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "1.1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "1.2"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9354392035199747`*^9, 3.935439273067724*^9}},
 CellLabel->
  "In[180]:=",ExpressionUUID->"709577ee-8a4a-48ab-b5ba-0019e7655037"],

Cell["\<\
As mentioned earlier, ContourPlot[] needs to variable specification (each as \
separate arguments, not in a List):\
\>", "Text",
 CellChangeTimes->{{3.9354394057325068`*^9, 
  3.9354394474884243`*^9}},ExpressionUUID->"c8ba93f2-ad02-4ae2-b268-\
a2f7e7f13da1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x", "^", "2"}], "+", 
       RowBox[{"y", "^", "2"}]}], "==", "5"}], ",", 
     RowBox[{"y", "==", 
      RowBox[{
       RowBox[{"x", "^", "2"}], "-", "3"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.935439315842204*^9, 3.935439341315411*^9}},
 CellLabel->
  "In[182]:=",ExpressionUUID->"f78834d7-7b5d-4757-b055-4dece02f2944"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
TYc+/3V/jQ8lX0q8Qr6VfCz5WvK55HuJV8gXk08m30w+mnw18Qz5bvLh5MvJ
p/8/H1/b51MOoOuJh+j+lCPo+ZQzaH3ES7T+2u8H/vm63sU/Gx2D18tmD/Iv
16nrEZ91eL1LpuuPszvlsRPbGH8/9iio4adtT7LQyZ2P99breNPKlc27Fl1m
PX5+d7Znjk5dX8v3g2Z4vtPxj2YjU8xGMhZskbrTIlXH50dU9N5ifpM9CerY
qH2CjndX+nGbVRhv3zJGx4fFtXLz63WXReQnrVx4TcfvtLTKWnc/mmUUXFq6
5oRO3c/cEw18i8N0vORa60jLlg/Yxkm+NvVDddw9YZlLwrKHTIFLoI4HXGzy
ZfjkWOYzsuHezqt0/Jnhxp0D+ifsyd+visL76NRcZ1ru3C46vnr47vL+l+LZ
9rj0t9076fj9UTm3R+XEM+W09jpuqdQlkSljlmLJj60KiPw9IpHtz/7K8fhD
SzVXhp0d0OvZn5Z8tcUZZ3uPl2yWe6PpRW6W3EVZXzJTbudkyV+1fOESV57C
Js+IHP5ztYWaY32KjXe4YMF3tJ5jaBSeyj5OGnCvmZ+FmouV7Z8150d3J988
fSeNWbbu8MB1rzn/zqLb4dfpaayDcp45v+/4uYvH43Rm+OTX8b//YM47Lne1
Xe6ayQT+zXhSV8O8EQczWVrGMu+Pe83UXK7sb60Z3xli+svC9wZaHnfQaXvH
kdnM3s30L62a8/9UBkTL919J+H3A4xxW0bi6h4enxF8u2pG8aMcHNbdfUe7z
kZnKfcJfw3On9DUdbPo005+Gv7RLCol7n8uGLds8qZ6Fhrets9545KnvLUJG
RwWPjspjus4elp09qtT3FHOUglSyqjFfLOgWl8+2rZxp/KeB3R/tfb7AqkB9
r3Kgu1tuYUoBm7zHIXx6pJ7V8emfbp1RwNpGjQXbE3qWG536zevther7GYf4
+aN+TC5kbbc+76QbXqq+Z5nmqUwg8+11ovOyZ0Xq5z/KvBSp5y3KW2p12raY
JYedsX9rKGSrcjY5NPinmIXat3CbOKGAKe2wLVH3kZztM/bByRI2vNy1X9TB
XDau5NuDHZuXst739YFu/T8wW+WCUkZ1Lyr7upWDfym7dSTGCnyy1XUXCV5n
ukeNvkqaV8Z6ZF70qJyTzryVvzJGc/TEc9UCx9gytnHk3uHX89+wJgvtV/rJ
evbXRetfyvq8ZkG/tZx+5bCe0VzT+6wAZf6S2HOFP8pZbNDbgeWGp0x/aGq5
8WAWbXLzW+c+Zk9vZU8vPlPOCLfdq1r0PvCynHnmPzrTIv2O2hdZGaDTLMvy
q2TNoQpWR2f63MoMvucqjAcjXpry6dyg3bEVbNrUv667XwmGlm16vd0w28Ay
PL4LHXX4FuT8fsB4GBjxdk7XJ5oU20oWnJTg2GxjPBx+mDzB0a6SBfZeMbXp
0XhIVuazkpHOrPzWBKBKFq+sJwXG3HcNWOxWxSZqwxJGnXoL/07baDyqGOmg
uWMfl0UhVcx7l+kB6aruP4jpZLxVJmxq8Pxts5HV7PulS9bN3JIN00q8npvN
rmak2/WfdL18J6SabVjX+NXc7Bzwn/a0U3plNft1r92zlto8+CCd1z1oreHk
G8KGfN/n1ngND7EtXtCdF8Cxbr0ajJtq1PkNZ8/8qyuELG+/d95+Gk4+xWf7
wLR1xzV8z+CJH93+KIbzHlOcZ2dpeOztRQ2PbC6FVf6lK/1LNZx80YqUwdtk
jcQPzopcdGBomarjM0fdMO5ID8NHdAhvPEbiiT8ssI5oWAETrvbZN2KKxMmX
vQvqW/ybu8Sb8r96bpEM8HBbxtClByV+2n3CpeMvKmGRHGJ6I8nJB1bumfwm
PlfivrcOeuj7auQfEw6/f1Js9BEjw8J/HKORvZFXyNdapLrn/Oag5RWtt1n9
Ycy/ZYObBHvM0/IS8SkbF2OUei0X7dTKGaMnz+WBWu69dbLFF+3NZOKx/et3
jslbYi5nFifax77W8iK+41CGj7mcvrhFXnSqFutnLnf28j0W9lbLgyY7NPfc
ZS77zY2w7dnFjEd2creeWmYhPyr83niYceRzOWD9sKqV4834/G8vP+9221Lu
9WJ7i6AVZnxD4JDQhBk62Uu/c61+pxnqbB36LtN3PF9eh+dvE/eTF+L95oV6
Nnr6nZlMz8P1yFdxPV3EeuUQXC/uR6b94H7lAtwv1SkY64H1kjdhvbCe6nlY
b/XTXPRDLsd+bO73xu9yO61M/VLGqlqSFZ+5ViOPFv2VB2J/sf+yP/Yf50Om
+cD5kU/g/OB8yS1xvlw2J/11xJh/aP6GifmUn+F8dnGObHyxsyQvELyl5tex
OM/LxbzLYTjviAeZ8IB4kZ8iXhBP8t+Ip6Peh2yCtmhkwttxgUc5G/GIeJWD
EK+IZ5nwjHgHd8R7A8EH4IN8gHwBxBcbBZ9AH+QTqtMF5BvkI9iAfIR8BcRX
YwWfwVTksxWC7+Ah8p3mwNjtd0MrgfgQ+RJ2IV++F3wKgcinyLdAfNtC8DE8
Rz52EXwNDtMEXxvDgfnBCxVAfI58Dw3rCL6nPnp5Cz2YFN9lXjP7CiBf2U3o
BwSgfqC+AOlLudAfMIqPoj+JQp8gCfVJsTMheiA9sxJ6B7tQ754KPYTVqIeo
l0B6aSn0FHqjntKcfIq+qVDoMUSjHqNeA+n1RKHnYId6/lLoPTij3qMfUPPz
SuEXYB/6hcXCT0Ai+omYL9oFv8stUvOyj/Ah4I9+hOZyDvqVCptjy0oci2CH
wh8lbJDwN2CD/gb9j5qf6wp/BK3QH+0X/gmmoH9Cf6XmZfRfEIj+i+Z8Pvqz
YOHfoA76N4GfPFU3Xwv/B0PR//2izH+umn8/CL8I5BcvCD8JjugnXwi/qerW
PuFHwYB+VK/4ifcgKfvTqvl5M+rMI+FvoTf6W/S/QLpBeVmpj5cZTxT+GdLR
P38l/DWQv55Tfuvq55ABfMggqwY25lxWAJ0BLoNWfZZub86FX0wD8usj1k4s
fXM3Dc48GxRy2ujnCben0O/3uDLOecDAt5ASuKejRwsLHq3U/w28VPZhwVP3
9Ls+7mgqaFefv5xpzAuUt/0wTySJvAFTMG+4ijwClEeWi7wCszGvEA8cwDxz
WOQdOIh5h/K2Us/XlpSXgPLSEpGnYAfmKcrfOZi3IkQeg2eYxwYp1z2GmaZ5
Xajjm0V+A1/MbytEvgPKd9ki/8EmzH/EQ26YD/eJ/AiZmB+/EfkSKF8+UtZ7
W+w/WsebizwKlEfHiLwKlFevizwLlGcp71PeTTcoeRgoD38i8jLswbx8XDn/
ONzFPF07f/8HLrw8dA==
    "], {{}, {}, 
     TagBox[
      TooltipBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
        LineBox[CompressedData["
1:eJwl1OO/EAYYBeB7a7Va2rLtlmvZNldr+WbdbNvGst3Ssm27rVq2bTz314fn
vOcfOG+SoNaVgwMDAgJCi5AbKqTzA2EIy4+EIzw/EYGIRCIyUfiZX4hKNKIT
g5jEIjZxiEs84pOAhCQiMUlISjKSk4KUpCI1aUhLOn4lPRnISCYyk4WsZCM7
v5GDnOQiN3nISz7yU4CCFKIwRShKMYpTgpKUojRlKEs5ylOBilSiMlWoyu9U
ozp/UIM/qUktalOHutSjPkE0oCGNaEwTmtKM5rSgJa0IpjVtaEs72tOBjnSi
M13oSje604Oe9KI3fehLP/ozgIEMYjBDGMowhjOCkYxiNGMYyzjGM4GJTOIv
JjOFqUxjOjOYySxmM4e5zGM+C1jIIhazhKUs42+Ws4KVrGI1/7CGtaxjPRvY
yCY2s4WtbGM7O9jJLnazh73sYz8HOMghDnOEoxzjOCc4ySlOc4aznOM8F7jI
v/zHJS5zhf+5yjWuc4Ob3OI2d7jLPe7zgIc84jFPeMoznvOCl7ziNW94yzve
84GPfOIzX/hKyPgDCRX4/Rd8A7QDgUI=
         "]]},
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "2"], "+", 
           SuperscriptBox[
            TagBox["y", HoldForm], "2"]}], "\[Equal]", "5"}]],
      Annotation[#, HoldForm[$CellContext`x]^2 + HoldForm[$CellContext`y]^2 == 
       5, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], 
        LineBox[CompressedData["
1:eJwV0dNSBAAAQNFtJtvWZtu2udm12fbPd3o4M/f9BsOPoYeIQCDwRaSIIpoY
YokjngQSSSKZFFJJI50MMskimxxyySOfAgopopgSSglSRjkVVFJFNTXUUkc9
DTTSRDMttNJGOx100kU3PfTSRz8DDDLEMCOMMsY4E0wyxTQzzDLHPAssssQy
K6wSYo11Nthki2122GWPfQ445IhjTghzyhnnXHDJFdfccMsd9/wPe+SJZ154
5Y13Pvjki29++OUP8lIgaA==
         "]], LineBox[CompressedData["
1:eJwNxkVWFQAAAMDvUbgSR/AAcAFAEBBFukulke4uSZVUuqQb6Y4Fs5j3Juht
aHDIm0AgEEWYhBPBOyKJ4j3RxBDLB+L4yCfi+UwCiSSRTAqppJFOBplkkU0O
ueSRTwFf+Mo3CimimBJKKaOcCr5TSRXV1FBLHfU00EgTzbTQShvtdNBJF930
0Esf/fxggEGGGGaEUX7yi9+MMc4Ek0wxzR/+MsMsc8yzwCJLLLPCKmv8Y50N
Ntlimx122WOfAw454pgT/nPKGedccMkV19xwyx33PPDIE8+88ApawmFy
         "]]},
       RowBox[{
         TagBox["y", HoldForm], "\[Equal]", 
         RowBox[{
           RowBox[{"-", "3"}], "+", 
           SuperscriptBox[
            TagBox["x", HoldForm], "2"]}]}]],
      Annotation[#, 
       HoldForm[$CellContext`y] == -3 + HoldForm[$CellContext`x]^2, 
       "Tooltip"]& ]}], {}},
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{240.40624999999943`, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "GridLinesInFront" -> 
    True},
  PlotRange->{{-3, 3}, {-3, 3}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.935439336039763*^9, 3.935439342384646*^9}},
 CellLabel->
  "Out[182]=",ExpressionUUID->"2c0e5916-3d33-4f6a-bc47-96ad710efcd5"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercises", "Subsubsection",
 CellChangeTimes->{{3.9350414802810373`*^9, 3.935041484658554*^9}, {
  3.9354375395376368`*^9, 
  3.935437541388433*^9}},ExpressionUUID->"3717d3ec-5631-42f3-a380-\
1dba4cc47e80"],

Cell[CellGroupData[{

Cell[TextData[{
 "Find all exact solutions to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "4"], "-", 
     RowBox[{"4", "x"}], "+", "3"}], "=", "0"}], TraditionalForm]],
  ExpressionUUID->"3b5a3693-e86b-48cc-8268-0e7f7ec23389"],
 "."
}], "ItemNumbered",
 CellChangeTimes->{{3.935438439384454*^9, 3.935438479470388*^9}, 
   3.935438552890334*^9, {3.93543859891101*^9, 3.935438599193779*^9}, {
   3.935474531156739*^9, 3.935474531777626*^9}, {3.935606244938211*^9, 
   3.935606254771598*^9}},ExpressionUUID->"b4db502e-c15f-4f55-82b7-\
9a8e9f8b6cc2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"x", "^", "4"}], "-", 
     RowBox[{"4", "x"}], "+", "3"}], "==", "0"}], ",", "x"}], "]"}]], "Code",
 CellChangeTimes->{{3.935438439384454*^9, 3.935438479470388*^9}, 
   3.935438552890334*^9, {3.93543859891101*^9, 3.935438599193779*^9}, {
   3.935474531156739*^9, 3.935474531777626*^9}, {3.935606244938211*^9, 
   3.935606294781309*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"2c149774-810f-4aff-86aa-4c75016532e8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       SqrtBox["2"]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       SqrtBox["2"]}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.935606270824247*^9, 3.935606296178829*^9}},
 CellLabel->"Out[4]=",ExpressionUUID->"e76d316d-d6a3-4c0a-81b2-11e18b6aa1f2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Find the exact real solutions to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "4"], "-", 
     RowBox[{"4", "x"}], "+", "3"}], "=", "0"}], TraditionalForm]],
  ExpressionUUID->"a6a85920-170d-4557-83ca-947dc4eb37e5"],
 "."
}], "ItemNumbered",
 CellChangeTimes->{{3.935438439384454*^9, 3.935438479470388*^9}, 
   3.935438552890334*^9, {3.935438592256034*^9, 3.935438592688326*^9}, {
   3.93547453409132*^9, 3.935474534763883*^9}, {3.9356063012608128`*^9, 
   3.9356063012739897`*^9}},ExpressionUUID->"d7e8f054-ebfe-45c9-bc0b-\
08e3b2233f52"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"x", "^", "4"}], "-", 
     RowBox[{"4", "x"}], "+", "3"}], "==", "0"}], ",", "x", ",", "Reals"}], 
  "]"}]], "Code",
 CellChangeTimes->{{3.935438439384454*^9, 3.935438479470388*^9}, 
   3.935438552890334*^9, {3.935438592256034*^9, 3.935438592688326*^9}, {
   3.93547453409132*^9, 3.935474534763883*^9}, {3.935606304398472*^9, 
   3.935606328017989*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"0727c6ae-e3af-4a20-ac65-24566c5de096"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.935606328996448*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"dc7b5822-22b6-417d-a31b-3d32241f14fd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Find all approximate solutions to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "4"], "-", 
     RowBox[{"4", "x"}], "+", "3"}], "=", "0"}], TraditionalForm]],
  ExpressionUUID->"f124a2c4-c130-4181-85c5-378fbd6e835c"],
 "."
}], "ItemNumbered",
 CellChangeTimes->{{3.935438439384454*^9, 3.935438479470388*^9}, 
   3.935438552890334*^9, {3.93543859891101*^9, 3.935438613555607*^9}, {
   3.935474537149558*^9, 3.935474537821863*^9}, {3.935606422551943*^9, 
   3.9356064225565166`*^9}},ExpressionUUID->"e241d603-8816-4e1d-b55a-\
0c16a306106a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"x", "^", "4"}], "-", 
     RowBox[{"4", "x"}], "+", "3"}], "==", "0"}], ",", "x"}], "]"}]], "Code",
 CellChangeTimes->{{3.935438439384454*^9, 3.935438479470388*^9}, 
   3.935438552890334*^9, {3.93543859891101*^9, 3.935438613555607*^9}, {
   3.935474537149558*^9, 3.935474537821863*^9}, {3.935606438605275*^9, 
   3.935606504309548*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"bf2d5d68-5b5e-49e3-a1e8-8212da6d2056"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "1.`"}], "+", 
      RowBox[{"1.414213562373095`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "1.`"}], "-", 
      RowBox[{"1.4142135623730951`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.935606457381401*^9, 3.935606472030817*^9}, 
   3.935606507251211*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"deddc65a-001d-4b3f-a42f-9e1827ed7b77"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Find the approximate real solutions to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "4"], "-", 
     RowBox[{"4", "x"}], "+", "3"}], "=", "0"}], TraditionalForm]],
  ExpressionUUID->"8f347f34-25f5-4930-89b9-b45a5e0b2250"],
 "."
}], "ItemNumbered",
 CellChangeTimes->{{3.935438439384454*^9, 3.935438479470388*^9}, 
   3.935438552890334*^9, {3.935438592256034*^9, 3.935438622260851*^9}, {
   3.935474540315229*^9, 3.935474540989502*^9}, {3.935606513192987*^9, 
   3.935606513198947*^9}},ExpressionUUID->"868d2659-69d3-47e0-9d5b-\
ddc18430ac9c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"x", "^", "4"}], "-", 
     RowBox[{"4", "x"}], "+", "3"}], "==", "0"}], ",", "x", ",", "Reals"}], 
  "]"}]], "Code",
 CellChangeTimes->{{3.935438439384454*^9, 3.935438479470388*^9}, 
   3.935438552890334*^9, {3.935438592256034*^9, 3.935438622260851*^9}, {
   3.935474540315229*^9, 3.935474540989502*^9}, {3.935606514286386*^9, 
   3.9356065221422367`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"81736302-dc49-439f-83c0-2dd55934d71b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.935606522678467*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"5a6e8e5a-5243-498b-98f9-a404aae35d9f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Find an approximate solution to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Tan", "[", "x", "]"}], "=", "x"}], TraditionalForm]],
  ExpressionUUID->"d7f9fca7-63c3-487c-bde3-a1c053d77e52"],
 " near ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "7.5"}], TraditionalForm]],ExpressionUUID->
  "0e70a300-9f33-46db-a026-54ee4a592fc2"],
 "."
}], "ItemNumbered",
 CellChangeTimes->{{3.935438439384454*^9, 3.935438479470388*^9}, 
   3.935438552890334*^9, {3.935438592256034*^9, 3.935438622260851*^9}, {
   3.9354388646374083`*^9, 3.935438903104821*^9}, {3.935438943935502*^9, 
   3.935438944787723*^9}},ExpressionUUID->"355bb55d-11e4-4fdb-a97f-\
20e34118a855"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Tan", "@", "x"}], "==", "x"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "7.5"}], "}"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.935606530063057*^9, 3.935606531300312*^9}, {
  3.935606561356275*^9, 3.935606611390834*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"6a5ef2dd-0a8b-4976-bdc6-74c66637f0e9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", "\[Rule]", "7.725251836937707`"}], "}"}]], "Output",
 CellChangeTimes->{{3.9356065804534483`*^9, 3.935606612475026*^9}},
 CellLabel->"Out[12]=",ExpressionUUID->"5a8e22e7-cb95-426f-bdbd-99766a3627b4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Solve ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"a", "\[VeryThinSpace]", 
     SuperscriptBox["e", 
      RowBox[{"k", "\[VeryThinSpace]", "x"}]]}], "=", "p"}], 
   TraditionalForm]],ExpressionUUID->"b3b58aee-184e-4a9c-8916-54c7c9c89c71"],
 " for real values of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "16d7e8ba-b3e5-49de-9a7b-389abc02ea57"],
 ".\[LineSeparator]"
}], "ItemNumbered",
 CellChangeTimes->{{3.935439640045178*^9, 3.935439647181439*^9}, {
  3.935439742061041*^9, 3.935439776815043*^9}, {3.935606692333674*^9, 
  3.935606700544917*^9}},ExpressionUUID->"9d739548-6b6d-463b-a9ff-\
be713f591735"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "*", 
     RowBox[{"Exp", "[", 
      RowBox[{"k", "*", "x"}], "]"}]}], "==", "p"}], ",", "x", ",", "Reals"}],
   "]"}]], "Code",
 CellChangeTimes->{{3.935439640045178*^9, 3.935439647181439*^9}, {
  3.935439742061041*^9, 3.935439776815043*^9}, {3.935606692333674*^9, 
  3.93560673637142*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"6730a189-4c8e-4892-932a-0f65fb6310fc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    TemplateBox[{
      FractionBox[
       RowBox[{"Log", "[", 
         FractionBox["p", "a"], "]"}], "k"], 
      RowBox[{
        RowBox[{"(", 
          RowBox[{
            RowBox[{"a", ">", "0"}], "&&", 
            RowBox[{"p", ">", "0"}]}], ")"}], "||", 
        RowBox[{"(", 
          RowBox[{
            RowBox[{"a", "<", "0"}], "&&", 
            RowBox[{"p", "<", "0"}]}], ")"}]}]},
     "ConditionalExpression"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.935606715075239*^9, 3.935606737387308*^9}},
 CellLabel->"Out[15]=",ExpressionUUID->"913abbcd-7821-428d-8dc2-38e8eccc139f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Graphically show approximately the values of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "001fba35-59d4-42bc-93c7-aaac46246017"],
 " where the graphs of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"2", 
     SuperscriptBox["x", "4"]}], "+", 
    SuperscriptBox["x", "3"], "+", 
    RowBox[{"8", "x", " ", 
     RowBox[{"sin", "(", 
      RowBox[{"2", "x"}], ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "9d0d43fa-a140-4d26-a54c-cba330e892de"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", "4"], "-", 
    SuperscriptBox["x", "2"]}], TraditionalForm]],ExpressionUUID->
  "ed64e50a-fc42-4a79-bf1b-539710677d21"],
 " intersect\[LineSeparator]"
}], "ItemNumbered",
 CellChangeTimes->{{3.9354402479481697`*^9, 3.9354403678543377`*^9}, {
  3.935606745411009*^9, 
  3.9356067515422153`*^9}},ExpressionUUID->"cb17f193-f3cb-4ad4-b1da-\
2a1b26f4e612"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", 
        RowBox[{"x", "^", "4"}]}], "+", 
       RowBox[{"x", "^", "3"}], "+", 
       RowBox[{"8", "x", "*", 
        RowBox[{"Sin", "@", 
         RowBox[{"(", 
          RowBox[{"2", "x"}], ")"}]}]}]}], ")"}], ",", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", "^", "4"}], "-", 
       RowBox[{"x", "^", "2"}]}], ")"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.9354402479481697`*^9, 3.9354403678543377`*^9}, {
  3.935606745411009*^9, 3.935606769043439*^9}, {3.9356068432260942`*^9, 
  3.935606843785708*^9}, {3.93560690665769*^9, 3.935607024943799*^9}, {
  3.935607342875292*^9, 3.93560734718661*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"3e359d60-72f8-4725-9375-2cd9c990aa55"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1:eJw1mnk81N/3x8cuayShYsaeyJbog+7JEhIVkkplyZIIyRKJRNZEyp5Q9pKS
ZKk7liikrCEpS1qtY52x/N7fP37/zDyej7mP8773nNfr3PN+PIbi4GnhxEwi
kc4QH//7TqvLMBDpY6fOnTk6zn3MBjL+XY2++IGdKgF3/KI32UCmbm8ofxw7
NVXTT+FsvDU8+BbleXQDO5Wj0zE9psIS7Lg5P4aysVN5Izut9XIsQVIzclcZ
Ezv1s8+SMectS8iPj5jgo7NROWYZTW/OWUKpbtiFtj9s1Fqm1rkeIUuozQhy
MWpjo558nX2mxN8CBo5fPKt7m416k+dK9qjRURD+ZHl4x2Y26h8TrSfs0uYg
2i73+YIAG5VLo49ZmMUctrUxzpTyslGXOz4HohEzoLx7eFGdnY0aNlZR/T3b
DBSptFu6i6zUccO9PackzECvLKntaD8rtd0kS02Zcgg8E7pMAu+zUmvddYvF
tQ7CpfiCjto0VmqB4wt7Z7GDcDku6MT6PVbq4O1ar+YVEwiMkjofHs9KfU76
fqWnzgRuhvpExYewUre9VfElm5lAptem5lx7Vuq/yZX+C67G8O6IpUGrDCv1
hXXI7KNnB0AhVTCvlkLEeyrt9v7uAYj71sFWup2V6lo7n8EVcACOXDzSnLCZ
lfpDJpRtdN8B6Is1O2jNxkplZ4vt+PPBEH41GR0ZHmOhGmR+VTebMQBOXR3b
xYcs1JHvbaKCZvrgFs6o/fWAhUqaXbKtUteHttbq7QMZLNS7wph0VUwfEk7u
/VabxEJVRtI6lr/0QCRgj0PYDRaqOHLcZxyhB/LlKq68jsR6TV0Vvcb9YLxD
5rKUJAu1xWpjHcUawJZjUvqkOAs14qCm4739AF4/XvYkiLFQd5eO35JQAkjJ
MdZcE2Shul3MsPRnBRgXdaf3sbBQY4/zrTi7IgjnKg+N/8FM3X9A+1Cx8j6o
+wu3lguZqUqpfCbjQ9rQ/X7DPpU8Zqo0j2rNgRpt+FXQOemcw0xV1pBL7EjR
ho3nzh3pTmOm6nrk8Dsf1Qa7wchNT2OYqQUGb35ENv0Ha23taefcmanir1WN
M17thf9KbfM/KjNTR9/ly9vXaMKTno0qFTuZqcEv5U9Yp2sCebWxKl2Omdro
3kS7ckUT2A8pfXCSYKZWmetOmWppQufvVRqDj5mqR4ss3/JqD7jJPNgvP8lE
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
CzDxW1vGHwZX6ncQ+3fOVZkmLS7j039mjgUR3Cv3Ozl2ahnfxhaF/zu/4ZMc
XeFfy5gyV3R3P5GfF2onx7K/L2MrnDlfQbD0K8HYnf3LuJnnb54GkV/mhht9
0LKMBb9L2FkT9fA21glprV/Gitd4yIsEf/8wJ2Nds4yll+wycon64T4nnwuP
l3Gsub+qKFHvXWfExRYeLeOE7SIsYwRnjfZSQ+8T8XuGVl8Rerk6acSXHL+M
DzLefQ2NIsNfH1IFOXIZh1bmB/pEk+Hk8qtTJSHLeIwiUeZJ6G8vq0IR1Ys4
j1DEsXBCrwuiPAZ/LZaxFF/9IzFC304PGv/4mi7jaIMjZGtC/93SwYkkg2Xc
dzRdJD2JDOXKk0ObNZYxW2w07b9kMngZfroCW5Zx5Ampm4MZZPjWEkVu5V/G
HR6iYjaEv8yP7G8+xrmMw5JIwl+yyKB06rnQheUlnBh85vUC4c8/Xnef3vuy
hNUN+4SvE352zLT58efBEtbiy3nV+JIMCS9+6nalLOHmo9OHP70i/Nnml1xz
ewlT90zvGKkmg9jqXaO4kCXc9/ISkwgmw6fTHUVKZ5dwql55c3MzGfZJHLzo
Jb6Eg41lw4UGCD3kai/OZy7iMu5KDgsmChyobjk8dHcRb63Ts+1nocDlzhOF
TXGLWLP4o4QDOwU+MQecSLlKrPd7e86fmwI3HV/UaNku4pGRJ2xPNlNgTlop
NGjrIu5XWlORVaDAxwLxDUzpC3jY2ueNkwUF7CaoTJfvLODbtZxMT60oMKvm
SB+PWcAacvW/560pIPSm4G9b0AJ+oH/F9OopCth0q7Snnl7Asobeha7nKDBC
0k9SoSzgq8zTq8W+FPA58CP2oegC0V8bzzf4U4A1LjJcWHAB8xzrYO67QgG5
LW2+K8wL2Gpqs+N8MAXclY7ZvBubxwZX73qvRVBg4YTLdrvCecyVrzq65x4F
Ih9sEO7KnsftYk6THCkUEPlRwncgbR6H7Kn61JVK3Fde0+s7Y+ZxuD97y6lM
CoTevDKyeGEe5/ZU2Cs8pIBA29Yvbufm8fjslcWPjyiQK/Cm66vtPP5+/XKT
Zz5xH2Yyv20wm8ech5433C+iAFd5bMFt5XncsRam+OwpBTKWlLKZ5YnnBWte
lX1GAcV9n1J9yfNYLHjV895zChx+LxRzSmAeXzVpYpytIO67b/fd5Whz+BuP
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
ImJs8P//5/o/KJhiOg==
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ], 
       TagBox[
        {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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
TEfpJGv4kjb2f/8XYv//f+H/ACu5UHE=
          "]]},
        Annotation[#, "Charting`Private`Tag#2"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1:eJw1mnk81N/3x8cuayShYsaeyJbog+7JEhIVkkplyZIIyRKJRNZEyp5Q9pKS
ZKk7liikrCEpS1qtY52x/N7fP37/zDyej7mP8773nNfr3PN+PIbi4GnhxEwi
kc4QH//7TqvLMBDpY6fOnTk6zn3MBjL+XY2++IGdKgF3/KI32UCmbm8ofxw7
NVXTT+FsvDU8+BbleXQDO5Wj0zE9psIS7Lg5P4aysVN5Izut9XIsQVIzclcZ
Ezv1s8+SMectS8iPj5jgo7NROWYZTW/OWUKpbtiFtj9s1Fqm1rkeIUuozQhy
MWpjo558nX2mxN8CBo5fPKt7m416k+dK9qjRURD+ZHl4x2Y26h8TrSfs0uYg
2i73+YIAG5VLo49ZmMUctrUxzpTyslGXOz4HohEzoLx7eFGdnY0aNlZR/T3b
DBSptFu6i6zUccO9PackzECvLKntaD8rtd0kS02Zcgg8E7pMAu+zUmvddYvF
tQ7CpfiCjto0VmqB4wt7Z7GDcDku6MT6PVbq4O1ar+YVEwiMkjofHs9KfU76
fqWnzgRuhvpExYewUre9VfElm5lAptem5lx7Vuq/yZX+C67G8O6IpUGrDCv1
hXXI7KNnB0AhVTCvlkLEeyrt9v7uAYj71sFWup2V6lo7n8EVcACOXDzSnLCZ
lfpDJpRtdN8B6Is1O2jNxkplZ4vt+PPBEH41GR0ZHmOhGmR+VTebMQBOXR3b
xYcs1JHvbaKCZvrgFs6o/fWAhUqaXbKtUteHttbq7QMZLNS7wph0VUwfEk7u
/VabxEJVRtI6lr/0QCRgj0PYDRaqOHLcZxyhB/LlKq68jsR6TV0Vvcb9YLxD
5rKUJAu1xWpjHcUawJZjUvqkOAs14qCm4739AF4/XvYkiLFQd5eO35JQAkjJ
MdZcE2Shul3MsPRnBRgXdaf3sbBQY4/zrTi7IgjnKg+N/8FM3X9A+1Cx8j6o
+wu3lguZqUqpfCbjQ9rQ/X7DPpU8Zqo0j2rNgRpt+FXQOemcw0xV1pBL7EjR
ho3nzh3pTmOm6nrk8Dsf1Qa7wchNT2OYqQUGb35ENv0Ha23taefcmanir1WN
M17thf9KbfM/KjNTR9/ly9vXaMKTno0qFTuZqcEv5U9Yp2sCebWxKl2Omdro
3kS7ckUT2A8pfXCSYKZWmetOmWppQufvVRqDj5mqR4ss3/JqD7jJPNgvP8lE
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
CzDxW1vGHwZX6ncQ+3fOVZkmLS7j039mjgUR3Cv3Ozl2ahnfxhaF/zu/4ZMc
XeFfy5gyV3R3P5GfF2onx7K/L2MrnDlfQbD0K8HYnf3LuJnnb54GkV/mhht9
0LKMBb9L2FkT9fA21glprV/Gitd4yIsEf/8wJ2Nds4yll+wycon64T4nnwuP
l3Gsub+qKFHvXWfExRYeLeOE7SIsYwRnjfZSQ+8T8XuGVl8Rerk6acSXHL+M
DzLefQ2NIsNfH1IFOXIZh1bmB/pEk+Hk8qtTJSHLeIwiUeZJ6G8vq0IR1Ys4
j1DEsXBCrwuiPAZ/LZaxFF/9IzFC304PGv/4mi7jaIMjZGtC/93SwYkkg2Xc
dzRdJD2JDOXKk0ObNZYxW2w07b9kMngZfroCW5Zx5Ampm4MZZPjWEkVu5V/G
HR6iYjaEv8yP7G8+xrmMw5JIwl+yyKB06rnQheUlnBh85vUC4c8/Xnef3vuy
hNUN+4SvE352zLT58efBEtbiy3nV+JIMCS9+6nalLOHmo9OHP70i/Nnml1xz
ewlT90zvGKkmg9jqXaO4kCXc9/ISkwgmw6fTHUVKZ5dwql55c3MzGfZJHLzo
Jb6Eg41lw4UGCD3kai/OZy7iMu5KDgsmChyobjk8dHcRb63Ts+1nocDlzhOF
TXGLWLP4o4QDOwU+MQecSLlKrPd7e86fmwI3HV/UaNku4pGRJ2xPNlNgTlop
NGjrIu5XWlORVaDAxwLxDUzpC3jY2ueNkwUF7CaoTJfvLODbtZxMT60oMKvm
SB+PWcAacvW/560pIPSm4G9b0AJ+oH/F9OopCth0q7Snnl7Asobeha7nKDBC
0k9SoSzgq8zTq8W+FPA58CP2oegC0V8bzzf4U4A1LjJcWHAB8xzrYO67QgG5
LW2+K8wL2Gpqs+N8MAXclY7ZvBubxwZX73qvRVBg4YTLdrvCecyVrzq65x4F
Ih9sEO7KnsftYk6THCkUEPlRwncgbR6H7Kn61JVK3Fde0+s7Y+ZxuD97y6lM
CoTevDKyeGEe5/ZU2Cs8pIBA29Yvbufm8fjslcWPjyiQK/Cm66vtPP5+/XKT
Zz5xH2Yyv20wm8ech5433C+iAFd5bMFt5XncsRam+OwpBTKWlLKZ5YnnBWte
lX1GAcV9n1J9yfNYLHjV895zChx+LxRzSmAeXzVpYpytIO67b/fd5Whz+BuP
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
ImJs8P//5/o/KJhiOg==
              "]]}, "Charting`Private`Tag#1"], 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1:eJw1mnc4ll/cwB8iM4RklKQIlWQl5NxGUSI7ykpbVpJdxi8yMhORZJSV7JX1
fbKzHnukbI/H3nu9z3td7/vPfV+f65z7e59zvuec+3yu6z5pYavzkBKHw70l
X/73fj8rdH5/nwavfOFz4/6+Nsa+zS0ot0OD15qkdN1f1saqr30zdtygwYsI
MtFSk7QxwYGfv2cWaPDmKLT0ZKs2NsU4mtQ3TIN3Op6jnhCvjdlZShnmVdHg
hUQJVkVK2thrgT/4R29p8DT6Gt/EA7WwmE+nwpuZaPAWF07sbBlpYl8G/Wy1
6Q7iBemEAv/uqmEcrbq3hI9Q46OYi8Y6v6pg9Vq6Ko0CVPh4i+1/zxYxTE1Y
wOEU/wG8aCmO2LIvi8lmGicTLlDiE683BvoFSGE/uljECs5S4i3ssIgGBymM
b7f6Z8wZSnwE+JsdM5PCDt483/zwBCX+wuWLJ+clpLD2yd3lbSZK/N7Nu/9p
DUhilgJfFIXmKPC/V5uMd6QksZjY4b+eGRR4Eb0xv5oFcWwr4BGbuDAFnu2T
pNm7cDEs841tjYgABZ6zufH6H08xzOK1s9OpkxT46IvvMqRsxbCG5wH97FwU
+Jx3qnj2m2JYjGFm0jotBZ6r/dLTFwfFsMuCaxLlJBw+T4P1yJ1tUcz5l4+e
WioOTxUdplU/fQ5bXf/6wfQMDq+VWxm5flQYu+NXFBV7Cod/UdVx4d+OEIbn
bIj+cwKHT2U+6tAzLIS9uzz/2YAThy/7wtFNlyGE8btdTtakw+GnH2dMPFAU
wuJ3Plm/6t4HhbIXvtO2Z7DbdHNZV0z3ofK40O3VfgGsmj9cssJ6DyoJBUd6
Z/kxze6gqaiHe9BwWTqgtIsf6/X3j39usgf9VJw2+eX82MyCJ6OAxh5YHerW
JQbxY2xgOxZ4bg9w+03Xrl/gxyzuakQYTe8CL6lem8LxJIaLoF1ZebILht1p
A0RWPkyO2iPv7IMd+DvTdHCZmQcTIgbRhRrvAKfVb3HFGW6Moy7WbEVvBzzL
4tOy6rmxBb8ShvKrO/BpA0RnvbixZMa1+5pndiCicSWKtMqFsbJbsz+f2gb7
7sX91lFOjMR/92Wh3TbUyuWuTnZzYN0HLBu5n24D5W0dG94iDqxqzPmkx71t
aHojvGQXxYHFJUc2q+psA82Ltk5bQw5MV6RdoE9iG17MPOHs6D+CVVy83r29
tgUZL/vl+EjsWAR26ZLiqy2oGIpnusvBhh2onf/X+HILPnZpfC/bYsXs1VPf
GNhsgW65/+HLg6yYtgFX+zOzLagnPNnySmXFmKy2rSIVt+Ac/o+7jjwr5hcF
idPUW3Dj0ambQ08OY+5zqkyRwZugaPT3lWc6Mzb9AlfA93YTVvoavYtdmLE7
m8V3v3tsQvtG3Rn+68zYZSqRNLzdJjy8NdrlT2LC1rgYVaZ1NsG5Mtg8RZgJ
s7va6oId3YQ4+lJ5XAEjdj/WcHzqywa8qbfR052nw0LzJ650RG3A0ccBjiN4
OqyiyTGyNGQDmAMrfVLC6TDu3QjVdx4b8PXwcnu7NB3WatKWdt5sA0467u+l
edFiCidu2NjxboCtno775ZM0GFei3Ppq7DrYKI6+7/alwq6VNNwaiFiH5bX3
pn9MqTCHdqPU2ndknkp7ynyJCmuldDaKcl+HO3bFmYykA5jv/fxSGeN1+F1w
YP3WzQPYyunznm486yAi+L2i7zglRkjhpaOIWYMCXql7u3X7yHwWT+EQvgZl
NEvlBn77aEn8/hYxYA02b5ge2VPbR+wVKdNNbmugc7+0VapxDxl2irV8NFmD
L3wLKsodu2gEp/xe7OQaTHIfLP+6uI3WjB4fN09dhZqOjYSthxvo7Rc6jo74
VUj73e+TfGEDcY5/Z7oWvQrVb59bRW+uIzm7hf2zAatwfi/nsW7wOvL0dRlZ
f7YKKdPRp1lL1xB9XmBKyIVVsMnkfRx4chXxMmZfhMIVML5TY7vGt4RsxoT+
hmSuwNzVb2nK84uooizB1zx5BS5U6jn9LV9EJtbv+ykiV+BHanL1/N1FFNvi
6KPycgVuPXeY+vBpAXGFXen7LbECWhPEFA3tOcTO0ejZmb0MQpqjXEILJPRg
Tvnst9Rl+LomJJEeR0L5tWVdL+OX4djV91ieBgnpOmWKHA1dBisNEWT4YwKF
94Z1GtmSOU6cfsieiJg/GQoNnl+G2oQqVxeOMUTPRyRMpi/BWM7nWxPOg+hv
LG3jUOISZNxpYju7MYB+cJ2t7YlZAvl3cFvfeQBpsdmV1QQswemCrC4jt38o
8uBWaoLlEuh9kduje9eP+GcPeRuJLIHD71KiUk8PWnkq9kqLn1yu6HvX50EP
qiHqOKtyLwHjQ/Xb8Uvd6MlQlI0U/RKoNM/ZGx/uRpkdJ+8enlqEXsQl22XY
ieRKpCR/py2CZ3CgCj1zG2K8ZHgBn7AIMuacJTZprWggz1WkKHoRUuv9T8Sp
tCLvH8D3zX8RsD7zqvytFlQff/2Q19NFYHE71G+x0Ij03poQZYQXITvR0RYT
qEVWej4fU1MXIDSGikFAtwgl7JVIiCQswEKrqmyBWCHqTl1o+R69APhHlgw/
WAoQtnuXOiuAXL/6jcHvnlzEnixuX2C1AOZaTpp/qH6g8vVB9Uoxcv3Y4t7U
Y9FoKeHIhLIwmX1yTzALfUBnbqp715wk88SLy/byYSgsvrC4nnUBcJdjJJhw
/6HGcG71uMl58DT5t58i6wjHpF/uFT0nM3fLc/qDCeAbMCRZajEPdoov/uJL
EmFhQP1Zhe48tKrWP1F99pU8j/l7q6XmAc9hJ9MLKWDdR8hp25wDlmMjtiGX
MqHCXeThtNccyMioXPslXgBCbR8+zdnPQfb2xmLZTAGEC1C0L96fA9LvZ021
XwvhUUuPwsbVOcBlRFsxMRcDM58PJzX9HODLmnMzm0rAvGqwkTd8Fp58Rjqy
cwCqVzYe/vOahYglUdFkdTyIFrHgYp/PAu3Xfwp8X/Cwk64oyaU9C5zV2xqz
Sr/gY3hSLBvLLJAup3uzva6E1nuPrWmDZ4DkxZ7YWlUNRf0eNHWvZoAviduT
g7YG4vQ/JvhYzwC+KUrmgXoNWF3/3UWpMQPFbwtajxFqgPbiWYVdhhkQe7kc
KdxYC4q4eaYl/2nwtJ1KIUbWg5ArTVq2yzSwHBLV1GqqB5aVE8q2T6chnuNi
Ww/uNwxMaDnNqE3DxzXm9quPf4MrIXeQSDMNM0bfdaqEG+De9UaXb+tTYJWz
46Ro2ABqVaNsDyamgGXPTZTk0wAcRexqw7VTkHzsUEz+QAPkxjlm9/tMQW/6
mrqNbyNEc4bciHk5BZRtTUP6mY3gGZ4yZvhwCtKzePzsuhpB07eXs1tlCkyN
YpDKySaYspb1aj0wBQsPP3n4ZzVB24QOT8jyJJxTvNV/vq0Jiu89K9AYnQS7
9sQo5qUm8NWPnWyonATO9UM3Qi82A/+VPe0ar0mQPObEkp7SDK2Hr5yLtp8E
rYVYlYBfzfCa6HbQ+v4k6N3ST/79pxn+hGyWsF+dBNEoJUpLhhZ4P7Jy6gEt
Ob612xONhy2gVCSxd2mTBDjPISNl1xZYCLTvZZgiQaL2Z7/44Ba4KbXwLq+R
BLxrrjERBS1A5Te9ShlCAhszIz2PnRbINRZp7fYgP6+pudnASADzi0/T0+1I
ED4eUu1zjABlf4imOjokSM2cLbwpSwDLLIHLgsokKGPEtd1RIwDnmwdsWxIk
WLFSX+/XJ8DL8yN1CUdIIIRvVpWzJcBpypOJLw+SyOcHPnMeNwK0d5u5X1+f
AHupcXN7XwKIev4TW+ydgAeqmot+nwjwV+8YQ83vCTBml7K88Y0AAcJ3xz+W
TACj6eE430wCENt7o7HYCRhr8aZ8AQSISDnqwB40AdUHPY8K1BFAyd1Ak/Rq
Ajr/KmXrtxBgQeuDUJnNBARLu5VTdxEgTqCTMtRsAhSKr1yQ7ifAzS3Wf/e1
JoC+5sDqxBABtlq0iy4pTsDc6++7PEQCpCaFhjGIT0BFrdOljikC3HYmPBvk
nwBBeZZQpnkCHNRgupbHNgFfr3ittCwRIP+kBt9bqgmIIMlpH1kjgMVa4Nad
VSKc5uIIH9kgAEtjQ6cokQjGljcSL20ToOILXRZlDxG4pZ2tjuwSwMpBzb+7
jgjsH5L+uO8RgPv62/vpxURoN5XqttknQP3x2iuv04hQJrytOkNmxyUqTp0Y
IjCon+FcI/PpOuUlgUAiELq1RIPI3P7Ju2nTjQiLX148zyXH87T7ldxsRYSL
Mgt1j8jvE72K80owIYLgQuDR7+T2/OVCd19qEkG+x+6q5yZ5/OdeSV1HRCgp
PS89Qe6PTFUZ83ExIpSKFDYPLZPzEbU9ucBHBHE7i3nrBXI+rGSrqw8TgRQ5
/ypkhpwPRZe4j5RE8HjicfcaiZyPI8XOVsvj5Pn78en7UXI+ptZ0sLFxoJsV
8HcaIOcDpM6zd5HLZ51ilnsJkPYkb7i0cBxclBNYipoI0Gnx5YR68jgYbfls
P6shAM4k0OTPh3EYCq0YTy8ngIH2/b4Nh3FQvMx4vDGDAF7qt476PRiHq99c
YzKTCJBxVU7/qB65/Nu8E18MAShl2dqkJMZBrdw6Pc+HAOcl95lq+MfBZP6E
cI8rAQxFp2/qsY6Dx6TI3SDyfM7kr6q3XxyDrsPPThXeJsAdhhf4rKwxePoy
4djRUwTwoTbbU/gyBp8tKNjn2AmQvX9DviV4DHT35a+YHyTPlxX+4hnrMSjk
T9bjJpHX39/2LOFzY5CqdTCfMqUF6DPFvySljsLl9XHjALYWkErl/Sf+cRR4
dihUQvebwTyRnqfy7SiEu7v8VJxuhsLIkcihR6NQ3nD7+nfy/mHhER58XGAU
cjvpkvItm6FEa+lVVMIIsHOW5rhmNsH4jYFSwbAReNSny5D1oQlYrjZsFniO
wIcBcIlzb4JHlxNfdpqNAFewlVHu9SZg5dexPsw7ApV5lbr1Q41guZxjHBgz
DH4mT5fdDpD3T+lFuccBw+A9/GLPYKIB6l3EeJRdh0GpOxN2GxpAAJfVt2U0
DDPJLZU5YQ0wxJhhYMk1DA/Dh8UbjzWAvmCy1vWPQ2B8/Nxjd5Hf4JUr6c90
bhCo9XIrHITrQPQ1tdHBU/1gc+JD5JGhSuAuaY0iUfUDLf290yZQCdRrn7ob
iH8gw/R8VXxcJfy1FtcLSf8DxushmrwmlRBgYnaLU/wPCMUdvETx5xdMyP+8
KqLYB+uh9ZJ9HXiI37YS1zTrgdCzGuYRkeXw7pLMczHFHhhaf/uCx6AcnF4c
yGY91QMS1vRHS46Ug+Z09PkeYjcE8Pb8UPxQBrt/aoXMbbrh0bTCxfcfSuFO
Cd8J+1ddsN+g8oQq9iewuXQyRH7qAFKKWBRtbQFs7G8ennftgCHhTr3TPgUw
4HuCU+1OB0yc+67kplIAqRGWp7c4O8jfN5fAgap8UMjGXTGNbIdbUqKvP9Tk
wdOJczaCYW3AZERYi+jKgdff6ROsD5HXRclONL1xBlz/qf/jRFML7PAe1Que
+Q7sdfE/2wJa4IPg6AH8q++QNiLdLkXbAgRhPROJxHTo5Lp/YI+yGXy4eub+
W04FEb/Sh8EbDdA/+DLm8M9v0PPASiRrtBZ2jQ+H/Mz9AhX/tC4VJteC24Hg
DWGWL5BsIKVS/rQW2nRv17DZxoGD2p5J43wN+Cpdbb9z8TOwnAsNm9iuBpXM
jWRSXQxcX87bOMFeBWM25229FSJBzOoj9ZmeSmCOCLE2yv8AnOPurKIxlfAm
tLio+uwHIHZfPSfPVwnThNfypiciwLukx8zw3C9wJsxr1nKFw8sD60En/SuA
6ZCM2PWf70CFrAYXmCsgR21fsac3EFgn/H5d+VAOb5hi+35uB0BmA/eqUUIZ
qMZMyfmq+wMxTME4/GcJbMXrMb1i84X8/2gc41EJWHa+6FrQ8AHvl60hmTU/
QaA18EFj4Bs4YWRR1dBWDDxLY6j88H9gyOcrcmCqEIwHTXybrnmCIOstlcN2
hUDHKdZvetkDVg5wmp5YKwBvBd+mwzOvIGwiLUyOsgA0HdOfajxyg4bM5o0X
3HmglfPEyS3TET7GR7J6x+dCP+VEK334S3gUbnYuVDAXXHmH5xLcHeCA46JZ
hngOvDtqp738yB6cXEWCf3/IhNCvlZ9G+KxBc26hOyv5B1zcVToxc+8ZCFoU
nYgsyoA/3l6/E7OfQtd1lRyLvnS4ubOnJOz0CDLK6bfUptKATVIrhGL+Aby5
2KZ0YTsV+vje7EQ53AcJLtPO7WMp4Ck9n8CUZg70QaePj5xPhnr3g49mskxh
BDf9sF7hG3y2f3xeX9gYwkhO6xHmSfCrMH/6kO1teGKsgLk9TwSBzXl1Szl9
wFqp/O95JwDQUZ52OaULA7anpIzVvgCT1rOut0GaEHQ7u1bI8jPkguMKG5U6
yKMrhquBn0DNAe97PlcVpgUbJn/9iIbSvkn0L0oFYphuuwUTosA9zUXxbIEi
XF8bZby7+AHWO4ukFNgVYOOfXdwZtgiwGKkK9zh/GVJqdi+sSIbDWXhjd6ZQ
Egx+BPzCG4SC5g1xL8VMMaAXuZDMvfgOPmx//pZ9VgSebKr9zpP0B/1/t+Km
+k5Bbb3FzE1nH1iS0J33bjkGpz66MxNLvcA4ZJDkm8IGlIRzD/f23KCqYUFu
6RUtlFubfxfzdQDVqbnfebpbFYucQqM13JYwtBPS6K8+XtGawTuop2MAQTpv
lA+dhgqqe+p8fsoK6AfV8zvnv7yrSBNNdGIssUCWX+1naaa7KqKdP692dNmh
Ht6NlfLCxYp/fU+zEjSdEWuZ+0l/R0rgl5N+alvngcQ1KjRrg5lBQtMrjDf+
P9Rdq827dZgTul4/tvExfouEaDeHXA6dBKcsDfUZzkBkyDdK5F4UBO4hCSHd
rmA07IkKW/POgyltEOU/tTBk+Ge3uTpdHLL4cM9ZzrxHDxQ0Wjinpcme9GJQ
mfoD4iZxyfbFyIG2NlHDaTQSUV/6PL5jjEHiU6Oy9F8f0QguNVD6tDKoxKDo
w69jESPLFOZndB0+5ObSXDWOQ570VxhC627Ci3FWOfnj8YhtO14vVFoLqnd9
0my3ExAu+2fdnQt6MOMP5v5Tiah4f8lTR98AjnBsHk3qS0JaT9VbNiMN4ZGo
lW930TeU3MV4DlmbQHDJtysLyckogDlKhYQzh6Jrgyt0kSlo8O083Y7hPaA1
07l/xSENyRKI7x3FH0B6iAz2VewHImzgqtUDLIGq+ksZjWQmunVRtOLVEysw
2zh4+dmlLDT6XIupxsAGArKnOLm+ZKPByjPV5RefgwLXz8ND33JRN4Pv36dx
L+FZ3gwh7EweKvhk3fy6mby+NfiCldPy0KVfTln/UTnDktdb+pSMfJQp9phO
M8AVkqf0D9jkFSKBKyr/HFY8oOON/68TUkUIrOxJN3M8AXei3KOtsAh151t3
XrPygju6p3ckS4pRatE9wsSsNzCXLa1s40tQE4/x6U8nfME5KITo31KBVk9x
3X8jGwTfzlR9ldMCpGKdVzsoGgztv9YsZtsABVFcYdsQDAGO7UzbVEs8OsnD
4iMcFgp2FzhmGGx+oaPOqyEZieEg8HFsrN2hCok9St7oPRYF8g/3qr4XVCF9
wq3HZ/KjQEecM+nNWhU6ojuQK6PxETyb1O9JO1cj4fc2x2PfRMMfXN6/aLca
FN0Y9laUNhaCn3p1m3vXIS+7rIjb2fHg10hRMFZRh86a5KR+PpAA3ue93z/Z
rkN7Js13om8ngNOit5adQz1a03jf8oMiEcxd3jR4PPqNEm0bRi6YJsFF/7cV
cTca0SPGM7rFl5KhMzUo+S8rAcmKrB41epgBLfRMPua3COiyrYD1reYMqLcK
vj8WSECcv0Sde6V+gOlHVRZHylakJ8GV+5k2E3SN1ZpfubWi8Age1JafBfJj
11WDrNtQWNFapPH7HDi0clMuQ7sD/Wic2HGWKACWP+L3new7kPoFWtwdhwJg
x3MGKr3vQDBVuO5YUADc78b+9HZ2oJgbpzrMZQpB6LS7K7VhJ6qj01DqxYpA
Se/7T1PTLmSn1ttpd/cnOObTyRx+1oP0JbZ867PKYcihVtLxTT/q1flzuu16
Ffytp+ZO/dqPLIbkHuZZVUHvsav7fdX96FjgmamgkCpora76fYX6L4rZz+AR
7qoCPPsvU2rfv+jr6+4n42bV8CW/1C/i7T/EqHvb6599DZiuZP/NDRhEG/I9
uBH/OrijtvBrLH0QzYqtzL5MrwP92AspHI2D6EEXl8t0Qx0I8vfIlFMPIYMS
8XvODPXA26B/4OS1IdRq4cZGFVgPTNy6H0m1Q2hFe05b6r/fMPdTo9KpfhhJ
VxRaPtVpBAG6Oge3nmG041pN7H7WCMaG2BkP4jCSryV9YfNphIY18Xe+VCPI
J4qKaqOwEb5JcBp8wEYQp+kYoxFnExj/GJnMLR5Bps0RBwZam+D9zt3YwroR
9Gfsy+YUsQka1Ls0S7pHkFu3X0fpThPITNXl/VoZQb4M6mrJZ5qB7cyPV61i
o+jfPdN0f9dmaIh3OjyXOorMXnxlGiOfvykWFqoWi0YRw0+X4G6BFpBBlo6r
taMocYWFyutSCyT/M+7fGRtF2ypJ+C2jFvDiVvrGcHIMfbsbNf/sUwsUPy29
zSw2hrQ/toTRfm+BuWJJejY0hnqTx7YMSlrA+PYZW26TMTTeILpP3UuOH8F4
WTh6DN13lKyIZCaA7ajP9LnUMZQO1v7fyT6eLL7/WaxoDNVMPa17JkwA9rZF
SpmuMTRyOPTRtCIB1PmeFciNjaGkZ8Vn0zQI4G079hgtj6Fii/izzEYEmD/U
03Tt8Di6evLa51YbAgiaaHnc4BtHuPN3bURcCGCc8fui5oVx9M50QEb4PwI0
3CiL1NcYR+EbTvaskQSgiJG6bmQ8jhoDFeS348g+OJm5bfxsHN2J6cj3SSG3
722C+QP/cTRTev+eexEBzHOsszKix1F//FyjN9nXufsv762kjSOGlER1DrKv
d1Id1LhSMo48Ts+0SJF9PVi0/ZNPwzhy+u+p8lAnAdQM46aa/4yj50rTH9jJ
vk7pbXmZY3oc8a+8yG0j+3rZd2k/0+1x9BrJvOEg+7pjF2VPMgMR5Q3GrQ6T
fV1sv0VgnoeIRL9iC+JkX58S+uRw6RwRvbcjGdOS/fWrzuMqD3kiqpF/f+oe
2W9N3SVY628S0Qi73Vl5sv9yJu+bs5gQkTLX0J2PZD9uJzRmGVoT0evXjlEO
ZH9+txm1F/+KiCyCNmoIZL++duqBxmQQEe0lmjSkkv0bpyEWezGOiKLFCG/3
yFziuDPlkklExaWpQwQyO8TXX66sICLuAadCHjKLNkT40ROIqOTqzuQQOT5p
2bxHZ5CIWvPP3OXdIUDi8fOCn+bJTME72U5un7HqpsPoPhE9Oiplv0tuP8fz
mqqzLBPIc2WlI5bcv9aYMFYHvgmEZRydziL3P6Da5F6Z2ARifOT/XmqaACpz
wtlUihPotcmT1HPk8ds7urZ3U3sC2Y9QUUWQx7dYsVLjw70JtGM47GH5hwD2
z4Jj/z2fQFaXc1cyO8j+XyEoaxNO5te7Z15VEyCetORXmDiB6mX631OVkf2Y
FXr2cifQV1oH3dVcArQ8vP0ypGMC4V5Un2D6QgC/kFPVPaMTSITarkMiggBK
P+dZ+VYm0OnYCqEKPwIUMvplZ7OTkHOy7u422b/tpPX2N06TkEEe7/EfFgQQ
MefTVJQiIfaNDycq9AgQl1c83aZPQt2yP6m2pQnge2dScDmSzEFHMyqWWwB7
U/BSLoWE3uWLKGsMt8DWD6/q/4pIyF7FnFO8pQVsKLgt2HtJaErm26fNby1g
kHrjsxTXJFI4/OOHiUYLsLRzzLwSnkShoYGjblIt0LA9Ilt7eRJp/XzrQTzW
Agq33HoN7kyi3DPBc58mm0Fg7Tub86dJNFZfGvuAvL9w1mjzf0+fRN4T1k9/
mTYDfcS62MDPSWRPLUHjotQMCxeVNVV6J1Fk4ur7FZpmKLP+48dyZArRt54a
2Q9ogix5zyjl01PoyZDbWQ7LJkhkEEx2lJhCsepUS6/VmsAv7XnVX+0ppLPH
9Uv5QBPojdPupQZPIVneWy3udo2gmp/J+PfzFKroeWRFd6MRZP/T42H+MYXe
cRYwDvE3At/JeJmXjVPo2oN/9I/bG2Da+NILRdpplK/m3V8u1ADenQ9JfV7T
SIVPuuJTTj28TGJYZwybRix2kt+vedTDE/scaix+GvWyil0QuVkPmiy7/MkV
08jdYCEwcrQOuG5GmNhvT6ObOUcfjtPWQXZVZTv9yxlUr0y7aXauBpLCnwxf
eTODWs0TZw7NVkPkPaYFu/czSGYoyXYkoxrc940O9eTMIL2/ke+2hKtBVW5R
NWluBmF3j/+r5aqCgdwT5XJPZlFvYXxmYwsemmXsRfidZlF8jZLZkDceyiqq
o2h9Z5E53XFpVmk8fGp4at+VNIu01g6Xh0kAGI7knbEdnEUba7yPajLKoO2w
WniiwRwqTuHIirxWBPiomH2/h2SmnX1gEFYI2cdnrWwd5tCQR9Ppc38KIFg4
XFU+fA5hUaEBLI/y4Ybi352u5jnU++qhoPujHKi2s3tMd3UesRQX30ljToa8
tcrOed15hL/gLV328Cskuh9R6rYgc+qiWXZRInj5lRxL8pxH8Rym0rpxcaAQ
T9UuXzaP+IQ87+VHhcLfxzd5i7kWkKdxod/eiQCkHzXkNx26gIa6z1cbVuWh
YNW8QxTRC6h1RyHqzHo+ql/3CedIWEB2VSZxcL4QyRqejVXMIden+SlgmFSM
eLkcs6LaFsjnaVE3n+xyRIph6FZmXUTFUqElnSLV6KT6wB0j7kXkx3pbv76/
Gt3Zzh604V9EYoY1cbLBNajprsFktPgiGhI9MZCwXotyjiXszOuQy8NV4tL+
/kaucdKnYt8vIlpnvotHFgkoT5MuNefTIiq7pc9qatKKZvb6z9UlLSKr7B7t
vcpWZGrmJb2Ut4hUJE0DU0PbkDJf03W1zkX0lWA8WCrVgRgT79mtsC+hY98m
6L+kdKO4b+/Kb0YuIYcXcasvxAaQg9DNxJ7PS4j0iC5oKWUAXf/O8Nbi2xKK
2JrAy/ENopXsAC3n/CVEdBt/+ZFuCKmX+Y0mtS8hXrtkWxOKYbTR/oZum2kZ
ZeZ8M3OhGkXauFf6aW+XkSCs46LuTiDB/+RlJUOWUdMlP6fir+R9knqHFyKX
Ufxmg5z63ARKZXAjdX5bRqeDlC/VepPQHoeLG656GTXo6tQdy5lE6edfJtzG
rSBKnzHxpFMziOqu9Sy1ywqKtPbgsSTnhUfdgE/Ca4Xc34E8weEFJC6HdM39
V9Bv6rwb5w8vInOewz9LoleQs0iFK5f9Iirvz39jW7KCQmMv8by8tIQcjXd4
+rZXEP+fJ5YvWpfRpEngjYzXq2hO/8ZBiyvrCKfp8KrPdxVtRzJXDjquI04F
k+yDIauoWcqQmJW9jq7xXuC492UVeXOEuqsJbKDEgfbhI/hV1NZ4zN6CdRMZ
m3G7eFCsoRLIeOa4s4VazNNSdN6sobDX+aoMrPvI+5SH7GrgGjqNmqM7tfeR
FFGvOer9Gtpto3CYDdtHsc9wy38T19B/MhwGb+lw2DPH2wqPf5HjGSwRAt7h
MNp31F1ue2soLzekTDKGAlMqukf5zXkdRZEOHCF2HsDWXC59UPUks89/uN3N
A1ia/CGhqbfryNWuyg6doMJYKos1LkSto5H/pO6oWlJhg03M0T8L1pG+3eSP
R5TUmPtI+YWWpXUk+fH5vT3Zg1jBIW6TdasNVEMovmHVQosRz1778sJhAx2T
rCMZbtBinDfsh+fdNpARhcixF/x0mLtvw0NSwAZ6FyJbKuZEh6nsu9r0pW4g
m9h0wU5+eqx9od+jdGwDvQk5JN7tzYDNdXxO9DDeROkqG+uxj5gwvqXfY9v3
N9GA8aaEUyQTpsOyJuj8bBPdOH61z7uWCSu4qfndznUTnf2c9Ff0DDPmXrOX
d+/jJlLtaRX/N8WM0ReZ1Sh3bqIKzgHNnnIWTDDmJInm5ha65vfpLIUFKxYt
4OQsqLeFjiT2HnzuwYox5jTRXjXeQkxuV9Rxn1mx5TonYW+rLaTUfdriVS8r
hl9tttx5t4VWku8yrmixYXe1XWcXmrfQ6YN9vuOq7FgobcdS361tNExZT22l
yYFtOb7Z/a67gxqMGmPzKrkx+q7aWXR3B2ULqQTxELkxbgm6gQ6LHZSBp3yT
RMeDXZ4Pqth+voM41jKa2LR5MOfHUR7qoTuoOu5qrdMwD7Z2O51iumkHPc8Z
uWZCexxbkmmlFrm2i1JrZQd4bU9g01s8TKkye+jSv4sJqjr8mHzt25sD2B66
aZy/fMySHwsOWw5gv76HYhy722m8+TExoUYaL6M9JBDI+YQ3lx9z1HeluOO6
hySPC6lqsZ3CcNm9Kwxle6hkhSKlre8UxvHwQ78t2kc0JuOciU4CWPzjt508
p3BYhpbRIYVNIYzW7UnjqTM4TOHkgw1NDmHMLvh65dmzOIxKQLLISUIYQwUM
2XISOGxNrHaYxUYYG6AMDbyrjMO8Q1qv3R8Txo7FfVT6dB+Hmd6LknvfJYJ9
7EzL5v6KwyIURRqdGs5hoYpN77gEKLDb0y2/gj3FsGsVSRJ/hSiwXEmuZNYw
MWxH1u1P3DkKbMdoXz0xQQx7IikidFqSvC6UqJfGKsUw7IxflagyBSZpeeDK
BvVFbIFRZUv5HgWmIIf7727wRexWb+ljm88U2OCYdKZsqjjGZPtdqeoIJWbe
HqwbTCGFVagUlxdyH8CMcD3fwttksV1rM2kDJioMX9b5Dv8Jwyho2qPP7lJh
omOtnhlIBZNWs6+8gTuInQzKpZ5uU8O2/maQjiwdxKqGHj5L+amBqVjVh2qs
HcQosZ0ehjYNLGh7VMZn6yAmwyBT8oqkgfFx8/ivUNJgX5nal/2PamKqt/2F
O9hosCYC/28VR00sou2hZagUDXZjs++ZmvQtTLSWd4behQarrcv8om+uhTnr
y0YovaLB1ODS8TErLezXmL68qxcNNiOtkOLiooXpHQh6N+lPg7kyck7/DNfC
3LDtc/UxNNiRQ09cQ2q0sPqSHmufMhrMPkhlJ/ScNsZ6Y/lIOZ4GY2XzcA67
rI0Z9zFVrFTTYMPPK0Sir2lj8+tXmR4002Chv8vlKsy1MQ6p/EylARpMWXbd
0OyDNmZeTTBwHaHBDn4NaolO1MbSdKf3cog0mBsLV0h/ljYmb89/6+Q8DXa7
M2TboUEb86VQWDdcpsEqa8oymnq0sdZQoy+h6zTYyOy9vLPj2hg330vV+m0a
TEfpJGv4kjb2f/8XYv//f+H/ACu5UHE=
              "]]}, "Charting`Private`Tag#2"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-3, 3}, {-0.2499998248225708, 97.32885129877451}},
            "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[2]], 
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{-3, 3}, {-0.2499998248225708, 97.32885129877451}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2]], 
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJw1mnk81N/3x8cuayShYsaeyJbog+7JEhIVkkplyZIIyRKJRNZEyp5Q9pKS
ZKk7liikrCEpS1qtY52x/N7fP37/zDyej7mP8773nNfr3PN+PIbi4GnhxEwi
kc4QH//7TqvLMBDpY6fOnTk6zn3MBjL+XY2++IGdKgF3/KI32UCmbm8ofxw7
NVXTT+FsvDU8+BbleXQDO5Wj0zE9psIS7Lg5P4aysVN5Izut9XIsQVIzclcZ
Ezv1s8+SMectS8iPj5jgo7NROWYZTW/OWUKpbtiFtj9s1Fqm1rkeIUuozQhy
MWpjo558nX2mxN8CBo5fPKt7m416k+dK9qjRURD+ZHl4x2Y26h8TrSfs0uYg
2i73+YIAG5VLo49ZmMUctrUxzpTyslGXOz4HohEzoLx7eFGdnY0aNlZR/T3b
DBSptFu6i6zUccO9PackzECvLKntaD8rtd0kS02Zcgg8E7pMAu+zUmvddYvF
tQ7CpfiCjto0VmqB4wt7Z7GDcDku6MT6PVbq4O1ar+YVEwiMkjofHs9KfU76
fqWnzgRuhvpExYewUre9VfElm5lAptem5lx7Vuq/yZX+C67G8O6IpUGrDCv1
hXXI7KNnB0AhVTCvlkLEeyrt9v7uAYj71sFWup2V6lo7n8EVcACOXDzSnLCZ
lfpDJpRtdN8B6Is1O2jNxkplZ4vt+PPBEH41GR0ZHmOhGmR+VTebMQBOXR3b
xYcs1JHvbaKCZvrgFs6o/fWAhUqaXbKtUteHttbq7QMZLNS7wph0VUwfEk7u
/VabxEJVRtI6lr/0QCRgj0PYDRaqOHLcZxyhB/LlKq68jsR6TV0Vvcb9YLxD
5rKUJAu1xWpjHcUawJZjUvqkOAs14qCm4739AF4/XvYkiLFQd5eO35JQAkjJ
MdZcE2Shul3MsPRnBRgXdaf3sbBQY4/zrTi7IgjnKg+N/8FM3X9A+1Cx8j6o
+wu3lguZqUqpfCbjQ9rQ/X7DPpU8Zqo0j2rNgRpt+FXQOemcw0xV1pBL7EjR
ho3nzh3pTmOm6nrk8Dsf1Qa7wchNT2OYqQUGb35ENv0Ha23taefcmanir1WN
M17thf9KbfM/KjNTR9/ly9vXaMKTno0qFTuZqcEv5U9Yp2sCebWxKl2Omdro
3kS7ckUT2A8pfXCSYKZWmetOmWppQufvVRqDj5mqR4ss3/JqD7jJPNgvP8lE
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
CzDxW1vGHwZX6ncQ+3fOVZkmLS7j039mjgUR3Cv3Ozl2ahnfxhaF/zu/4ZMc
XeFfy5gyV3R3P5GfF2onx7K/L2MrnDlfQbD0K8HYnf3LuJnnb54GkV/mhht9
0LKMBb9L2FkT9fA21glprV/Gitd4yIsEf/8wJ2Nds4yll+wycon64T4nnwuP
l3Gsub+qKFHvXWfExRYeLeOE7SIsYwRnjfZSQ+8T8XuGVl8Rerk6acSXHL+M
DzLefQ2NIsNfH1IFOXIZh1bmB/pEk+Hk8qtTJSHLeIwiUeZJ6G8vq0IR1Ys4
j1DEsXBCrwuiPAZ/LZaxFF/9IzFC304PGv/4mi7jaIMjZGtC/93SwYkkg2Xc
dzRdJD2JDOXKk0ObNZYxW2w07b9kMngZfroCW5Zx5Ampm4MZZPjWEkVu5V/G
HR6iYjaEv8yP7G8+xrmMw5JIwl+yyKB06rnQheUlnBh85vUC4c8/Xnef3vuy
hNUN+4SvE352zLT58efBEtbiy3nV+JIMCS9+6nalLOHmo9OHP70i/Nnml1xz
ewlT90zvGKkmg9jqXaO4kCXc9/ISkwgmw6fTHUVKZ5dwql55c3MzGfZJHLzo
Jb6Eg41lw4UGCD3kai/OZy7iMu5KDgsmChyobjk8dHcRb63Ts+1nocDlzhOF
TXGLWLP4o4QDOwU+MQecSLlKrPd7e86fmwI3HV/UaNku4pGRJ2xPNlNgTlop
NGjrIu5XWlORVaDAxwLxDUzpC3jY2ueNkwUF7CaoTJfvLODbtZxMT60oMKvm
SB+PWcAacvW/560pIPSm4G9b0AJ+oH/F9OopCth0q7Snnl7Asobeha7nKDBC
0k9SoSzgq8zTq8W+FPA58CP2oegC0V8bzzf4U4A1LjJcWHAB8xzrYO67QgG5
LW2+K8wL2Gpqs+N8MAXclY7ZvBubxwZX73qvRVBg4YTLdrvCecyVrzq65x4F
Ih9sEO7KnsftYk6THCkUEPlRwncgbR6H7Kn61JVK3Fde0+s7Y+ZxuD97y6lM
CoTevDKyeGEe5/ZU2Cs8pIBA29Yvbufm8fjslcWPjyiQK/Cm66vtPP5+/XKT
Zz5xH2Yyv20wm8ech5433C+iAFd5bMFt5XncsRam+OwpBTKWlLKZ5YnnBWte
lX1GAcV9n1J9yfNYLHjV895zChx+LxRzSmAeXzVpYpytIO67b/fd5Whz+BuP
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
ImJs8P//5/o/KJhiOg==
          "]]}, "Charting`Private`Tag#1"], 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
TEfpJGv4kjb2f/8XYv//f+H/ACu5UHE=
          "]]}, "Charting`Private`Tag#2"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, 
       "PlotRange" -> {{-3, 3}, {-0.2499998248225708, 97.32885129877451}}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2]], 
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3, 3}, {-0.2499998248225708, 97.32885129877451}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.935606996469763*^9, 3.93560702575347*^9}},
 CellLabel->"Out[18]=",ExpressionUUID->"0dd63b42-b0cb-4207-8565-9dff42526d29"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Try to find the exact values of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "a151ad38-ffc5-438b-bd2d-372f04cb3d2a"],
 " where the graphs of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"2", 
     SuperscriptBox["x", "4"]}], "+", 
    SuperscriptBox["x", "3"], "+", 
    RowBox[{"8", "x", " ", 
     RowBox[{"sin", "(", 
      RowBox[{"2", "x"}], ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "c13ef966-aa55-414f-abb9-4a366d414fe3"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", "4"], "-", 
    SuperscriptBox["x", "2"]}], TraditionalForm]],ExpressionUUID->
  "f674018a-9b43-4ea3-b9cd-8220161b228c"],
 " intersect; comment on your success, given the result in exercise 7."
}], "ItemNumbered",
 CellChangeTimes->{{3.9354402479481697`*^9, 3.9354403678543377`*^9}, {
  3.935440653605237*^9, 
  3.9354406887172127`*^9}},ExpressionUUID->"754456e5-af51-447c-a372-\
b86370ac33a1"],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"2", 
       RowBox[{"x", "^", "4"}]}], "+", 
      RowBox[{"x", "^", "3"}], "+", 
      RowBox[{"8", "x", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", "x"}], "]"}]}]}], "==", 
     RowBox[{
      RowBox[{"x", "^", "4"}], "-", 
      RowBox[{"x", "^", "2"}]}]}], "}"}], ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.935607050204867*^9, 3.935607053271134*^9}, {
  3.935607087281207*^9, 3.935607091126564*^9}, {3.935607140592095*^9, 
  3.9356071597737503`*^9}},ExpressionUUID->"108ba41f-b731-4756-8b3c-\
d2c56f663da0"]
}, Open  ]],

Cell["\<\
It doesn\[CloseCurlyQuote]t work because it uses inverse functions to solve \
and can\[CloseCurlyQuote]t find all the solutions.\
\>", "Text",
 CellChangeTimes->{{3.935607161323031*^9, 
  3.935607197277144*^9}},ExpressionUUID->"ef036d80-1bd6-4668-aae7-\
d53405bc58f2"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "ifun", 
   "\"Inverse functions are being used by \
\\!\\(\\*RowBox[{\\\"Solve\\\"}]\\), so some solutions may not be found; use \
Reduce for complete solution information.\"", 2, 21, 9, 18540415023301359867, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.935607091642665*^9, 3.935607142147791*^9},
 CellLabel->
  "During evaluation of \
In[21]:=",ExpressionUUID->"57db72b7-0860-4b53-a492-a2cb95387218"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", "0"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.9356070916497*^9, 3.935607142153157*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"051ce9fb-c324-4e7a-8f27-e1a81b298d0e"],

Cell[CellGroupData[{

Cell[TextData[{
 "Use a simple NSolve[] command to try to find the approximate values of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "2270f5e2-a74a-46e0-be54-3506d6149a53"],
 " where the graphs of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"2", 
     SuperscriptBox["x", "4"]}], "+", 
    SuperscriptBox["x", "3"], "+", 
    RowBox[{"8", "x", " ", 
     RowBox[{"sin", "(", 
      RowBox[{"2", "x"}], ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "a4d936e9-f94a-4e67-bcc9-9cbdfec7ca09"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", "4"], "-", 
    SuperscriptBox["x", "2"]}], TraditionalForm]],ExpressionUUID->
  "eba712d4-84e1-4183-814b-13b7fea136f1"],
 " intersect; comment on your success, given the result in exercise 7."
}], "ItemNumbered",
 CellChangeTimes->{{3.9354402479481697`*^9, 3.9354403678543377`*^9}, {
  3.935440653605237*^9, 3.9354407261613493`*^9}, {3.9354408119291687`*^9, 
  3.935440812105317*^9}, {3.9356071046272984`*^9, 
  3.935607104631638*^9}},ExpressionUUID->"892f3446-6489-466c-bdf8-\
e71edc1b9002"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"2", 
       RowBox[{"x", "^", "4"}]}], "+", 
      RowBox[{"x", "^", "3"}], "+", 
      RowBox[{"8", "x", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", "x"}], "]"}]}]}], "==", 
     RowBox[{
      RowBox[{"x", "^", "4"}], "-", 
      RowBox[{"x", "^", "2"}]}]}], "}"}], ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.9354402479481697`*^9, 3.9354403678543377`*^9}, {
  3.935440653605237*^9, 3.9354407261613493`*^9}, {3.9354408119291687`*^9, 
  3.935440812105317*^9}, {3.935607106486846*^9, 3.935607108879087*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"9b237e13-6ba0-4e44-a58e-7d737c62cf36"],

Cell[BoxData[
 TemplateBox[{
  "NSolve", "ifun", 
   "\"Inverse functions are being used by \
\\!\\(\\*RowBox[{\\\"NSolve\\\"}]\\), so some solutions may not be found; use \
Reduce for complete solution information.\"", 2, 20, 8, 18540415023301359867, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.935607110560371*^9},
 CellLabel->
  "During evaluation of \
In[20]:=",ExpressionUUID->"3fd7a2e9-e588-43bc-8774-b6f524a656c4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", "0.`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.935607110566681*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"6c5b7618-90a7-4331-8e56-3651e4b2b44c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Use FindRoot[] to find the approximate values of all ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "1e96dcbb-bae4-4ce6-bd94-476f011149e0"],
 " where the graphs of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"2", 
     SuperscriptBox["x", "4"]}], "+", 
    SuperscriptBox["x", "3"], "+", 
    RowBox[{"8", "x", " ", 
     RowBox[{"sin", "(", 
      RowBox[{"2", "x"}], ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "4f64b167-b9ff-433d-96f9-b1bec4ce83db"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", "4"], "-", 
    SuperscriptBox["x", "2"]}], TraditionalForm]],ExpressionUUID->
  "9d12f52c-15c5-4179-ad66-c5b2991e4581"],
 " intersect; see exercise 7."
}], "ItemNumbered",
 CellChangeTimes->{{3.9354402479481697`*^9, 3.9354403678543377`*^9}, {
  3.935440653605237*^9, 3.9354407261613493`*^9}, {3.935440806928935*^9, 
  3.9354408666772747`*^9}, {3.935607202655528*^9, 
  3.935607202659623*^9}},ExpressionUUID->"95497a50-f550-409b-ac18-\
fe9667f2bf60"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"2", 
       RowBox[{"x", "^", "4"}]}], "+", 
      RowBox[{"x", "^", "3"}], "+", 
      RowBox[{"8", "x", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", "x"}], "]"}]}]}], "==", 
     RowBox[{
      RowBox[{"x", "^", "4"}], "-", 
      RowBox[{"x", "^", "2"}]}]}], "}"}], ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.9354402479481697`*^9, 3.9354403678543377`*^9}, {
  3.935440653605237*^9, 3.9354407261613493`*^9}, {3.935440806928935*^9, 
  3.9354408666772747`*^9}, {3.935607203322875*^9, 3.935607211348947*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"cb7027fb-f895-4553-9cdc-8e36e3c50f14"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "srect", 
   "\"Value \\!\\(\\*RowBox[{\\\"x\\\"}]\\) in search specification \
\\!\\(\\*RowBox[{\\\"{\\\", \\\"x\\\", \\\"}\\\"}]\\) is not a number or \
array of numbers.\"", 2, 22, 10, 18540415023301359867, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.935607216538066*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"a115ed40-d223-498e-a95b-7dce5463a8c5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"2", " ", 
       SuperscriptBox["x", "4"]}], "+", 
      SuperscriptBox["x", "3"], "+", 
      RowBox[{"8", " ", "x", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "x"}], "]"}]}]}], "\[Equal]", 
     RowBox[{
      SuperscriptBox["x", "4"], "-", 
      SuperscriptBox["x", "2"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1.9"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"2", " ", 
       SuperscriptBox["x", "4"]}], "+", 
      SuperscriptBox["x", "3"], "+", 
      RowBox[{"8", " ", "x", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "x"}], "]"}]}]}], "\[Equal]", 
     RowBox[{
      SuperscriptBox["x", "4"], "-", 
      SuperscriptBox["x", "2"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.935607231316733*^9, 3.9356072582764673`*^9}, {
  3.9356073227845793`*^9, 3.935607327232484*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"b2e34e89-d673-4112-9910-be92bf6c07f1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", "\[Rule]", 
   RowBox[{"-", "1.9718534182078566`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.935607233001412*^9, 3.935607258592688*^9}, 
   3.93560732876761*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"b2b84c60-f227-4acc-99af-f341eaf46f6f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", "\[Rule]", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{{3.935607233001412*^9, 3.935607258592688*^9}, 
   3.93560732876959*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"8f220b1f-4821-4aac-97e4-97ad732c5920"]
}, Open  ]]
}, Open  ]],

Cell["\<\
How can you be sure whether you found all the solutions in exercises \
7\[Dash]10?\
\>", "ItemNumbered",
 CellChangeTimes->{{3.93547462724931*^9, 3.935474659964673*^9}, {
  3.935607267070539*^9, 
  3.9356072670735607`*^9}},ExpressionUUID->"f069ebd3-dc75-4f93-acf5-\
ddef249f5d93"],

Cell["I\[CloseCurlyQuote]m sure because I only saw two intercepts on the \
graph.", "Text",
 CellChangeTimes->{{3.93547462724931*^9, 3.935474659964673*^9}, {
  3.935607268410894*^9, 3.935607268414576*^9}, {3.9356073056863194`*^9, 
  3.93560731855779*^9}},ExpressionUUID->"a446986e-45d6-442d-9787-\
1d31eb6d021e"],

Cell[CellGroupData[{

Cell[TextData[{
 "Graphically show the points of intersection of a circle of radius 1 \
centered at the origin and the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{"2", 
     RowBox[{"Sin", "[", 
      RowBox[{"4", "x"}], "]"}]}]}], TraditionalForm]],ExpressionUUID->
  "58eb8a00-db4d-4835-aa82-22e0c0809916"],
 "."
}], "ItemNumbered",
 CellChangeTimes->{{3.935441095822714*^9, 3.935441207031996*^9}, {
  3.935441263668401*^9, 3.935441274554043*^9}, {3.9354413674628477`*^9, 
  3.935441367462921*^9}, {3.935607358469754*^9, 
  3.935607358474263*^9}},ExpressionUUID->"b7ca5358-9d12-4dc6-bdf5-\
79c7e12f567b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x", "^", "2"}], "+", 
       RowBox[{"y", "^", "2"}]}], "==", "1"}], ",", 
     RowBox[{"y", "==", 
      RowBox[{"2", 
       RowBox[{"Sin", "[", 
        RowBox[{"4", "x"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.935441095822714*^9, 3.935441207031996*^9}, {
  3.935441263668401*^9, 3.935441274554043*^9}, {3.9354413674628477`*^9, 
  3.935441367462921*^9}, {3.935607359879236*^9, 3.935607359883246*^9}, {
  3.935607400997753*^9, 3.935607410395608*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"808f076a-ba58-4abe-9535-27399c03acd5"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
GsfdGHt8dKkc5k06ET5nVzWaFHyKTfkmByGvebhqmCP6y+GDWDZNy7AaA3Pe
GeCp5v+7rHbI6lXNx0/zVY3Hp0ROKjOVw6Dimwe61FZh30cnYg8Pl8Puwtye
Vr+rMGR/2zX58iY4fW19/JuYKj5/4zTkpsFhVVgxzDPVI66JzVcVZpiu15sR
3ARjX/qr7L5ShTGz59efbl6f1zPD9mzbW4Up7lbXg9s1QYql6VyTpVV8vf/K
NHujbl6F98+db7R1bwSreo9VDwdUcXsR8rCkI0bF7n0bIcgo+elo1Sp8dzsL
fQIbYP3TjZ5q8kpujx/0o6o/l1aiV8aYrweXNkD6jm9bDPMq0b73/NS10ACq
GlW6mFLJ7Vvn/idn28hKbPng68PSf+ohp6bFLrO3zd9fnTb4tVc9+BzfF7Q9
qJLvF1qPSsxMdqooqZZBVYzEbbxbJRYV7zQ/lCGDEwMrUlacq2T+RAbdllhW
dD5bifcOXjkyNlkGrT4/DPm0tZLvX69TtdeuLKvE+mtWItcyKZxcv+q2vmUl
iy9SsI/J+fx4ciX6L2+jbrxWCm1UNY6fG1HJ/YWRSeUjmX4ldrQYfdu7XgKn
7yfYVXep5P5GyFPf9E5NezNOAonBWztNqKjAS/dm7V3bRgI5uZ3EUFrB/dlu
zbLW8oIKfHVOdExeI4bIiUlb7YIr2POLITEyNbOfdwXGtnX4/Lv5q34XLue7
Ha/g/vPl580Zkk0VqDb//EB7DxGcL7Jd8cqygsUbESR+nx3UESpQZfv5rlY9
RLB7St/vaVoV3F9XOxa/qi4pxzVdh0QnDamDZd55FqpF5ex56yAhL/iYNL8c
J35/ueZL7zp4p7hvOcbYJW8f31QL42wC3R++Kefx42lt1Mr7l8rxhPFp33W6
tdCz7O7YPgfL8SnmwM/4GugRPEtVc0U5j1fxOstd95uW45OLvSzsmuPZsHlp
MZfVy3HrCtupLXdXg6Rn5n435XIeP2tnV72wlJRhXKlv+Sb9atgY7TsmKqmM
x2OhDhietnLIBJsquF95IGDMkzL0bx2ml2dQBWWtxbF2j8p4vFe9HzdGyacM
PUTDn/bXqoK4NU2dfQ+VseepBOVbG3T0V5fh2N76D38aVELge1Xrcqsynl/E
rf/edHdGGS511Tkfea4CVlrMd+vVswydN2lZXF9UDrt3dE3f2aKM5y9X9dIi
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
YHflUE3xMznz60pT2Psr4H8AAutIZg==
    "], {{}, {}, 
     TagBox[
      TooltipBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
        LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
         18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
         35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
         52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
         69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 
         86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 
         102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
          116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 
         129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 
         142}]},
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "2"], "+", 
           SuperscriptBox[
            TagBox["y", HoldForm], "2"]}], "\[Equal]", "1"}]],
      Annotation[#, HoldForm[$CellContext`x]^2 + HoldForm[$CellContext`y]^2 == 
       1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], 
        LineBox[CompressedData["
1:eJwl19OyIIi2RcHdZdu2baPLtm3bdpdt27Zt27Ztn7xxHzLWB6wYDzNhw3YV
2/4TEBCQNkhAwFh3HOOZwEQmMZkpTGUa05nBTGYxmznMZR7zWcBCFrGYJSxl
GctZwUpWsZo1rGUd69nARjaxmS1sZRvb2cFOdrGbPexlH/s5wEEOcZgjHOUY
xznBSU5xmjOc5RznucBFLnGZK1zlGte5wU1ucZs73OUe93nAQx7xmCc85RnP
ecFLXvGaN7zlHe/5wEc+8ZkvfOUb3/nBT37xmz/8JcAz/yEQgQlCUIIRnBCE
JBShCUNYwhGeCEQkEpGJQlSiEZ0YxCQWsYlDXOIRnwQkJBGJSUJSkpGcFKQk
FalJQ1rSkZ4MZCQTmclCVrKRnRzkJBe5yUNe8pGfAhTkXwpRmCIUpRjFKUFJ
SlGaMpSlHOWpQEUqUZkqVKUa1alBTWpRmzrUpR71aUBDGtGYJjSlGc1pQUta
0Zo2/F+E7WhPBzrSic50oSvd6E4PetKL3vShL/3ozwAGMojBDOE/hjKM4Yxg
JKMYzRjGMo7xTGAik5jMFKYyjenMYCazmM0c5jKP+SxgIYtYzBKWsozlrGAl
q1jNGtayjvVsYCOb2MwWtrKN7exgJ7vYzR72so/9HOAghzjMEY5yjOOc4CSn
OM0ZznKO81zgIpe4zBWuco3r3OAmt7jNHe5yj/s84CGPeMwTnvKM57zgJa94
zRve8o73fOAjn/jMF77yje/84Ce/+M0f/hIQSP8EIjBBCEowghOCkIQiNGEI
SzjCE4GIRCIyUYhKNKITg5jEIjZxiEs84pOAhCQiMUlISjKSk4KUpCI1aUhL
OtKTgYxkIjNZyEo2spODnOQiN3nISz7yU4CC/EshClOEohSjOCUoSSlKU4ay
lKM8FahIJSpThapUozo1qEktalOHutSjPg1oSCMa04SmNKM5LWhJK1rThra0
oz0d6EgnOtOFrnSjOz3oSS9604e+9KM/AxjIIAYzhP8YyjCGM4KRjGI0YxjL
OMYzgYlMYjJTmMo0pjODmcxiNnOYyzzms4CFLGIxS1jKMpazgpWsYjVrWMs6
1rOBjWxiM1vYyja2s4Od7GI3e9jLPvZzgIMc4jBHOMoxjnOCk5ziNGc4yznO
c4GLXOIyV7jKNa5zg5vc4jZ3uMs97vOAhzziMU94yjOe84KXvOI1b3jLO97z
gY984jNf+Mo3vvODn/ziN3/4S0Bg/ROIwAQhKMEITghCEorQhCEs4QhPBCIS
ichEISrRiE4MYhKL2MQhLvGITwISkojEJCEpyUhOClKSitSkIS3pSE8GMpKJ
zGQhK9nITg5ykovc5CEv+chPAQryL4UoTBGKUozilKAkpShNGcpSjvJUoCKV
qEwVqlKN6tSgJrWoTR3qUo/6NKAhjWhME5rSjOa0oCWtaE0b2tKO9nSgI53o
TBe60o3u9KAnvehNH/rSj/4MYCCDGMwQ/mMowxjOCEYyitGMYSzjGM8EJjKJ
yUxhKtOYzgxmMovZzGEu85jPAhayiMUsYSnLWM4KVrKK1axhLetYzwY2sonN
bGEr29jODnayi93sYS/72M8BDnKIwxzhKMc4zglOcorTnOEs5zjPBS5yictc
4SrXuM4NbnKL29zhLve4zwMe8ojHPOEpz3jOC17yite84S3veM8HPvKJz3zh
K9/4zg9+8ovf/OEvAXbcPwQiMEEISjCCE4KQhCI0YQhLOMITgYhEIjJRiEo0
ohODmMQiNnGISzzik4CEJCIxSUhKMpKTgpSkIjVpgvz/9kxHejKQkUxkJgtZ
yUZ2cpCTXOQmD3nJR34KUJB/KURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQ
lWpUpwY1qUVt6lCXetSnAQ1pRGOa0JRmNKcFLWlFa9rQlna0pwMd6URnutCV
bnSnBz3pRW/60Jd+9GcAAxnEYIbwH0MZxnBGMJJRjGYMYxnHeCYwkUlMZgpT
mcZ0ZjCTWcxmDnOZx3wWsJBFLGYJS1nGclawklWsZg1rWcd6NrCRTWxmC1vZ
xnZ2sJP/AfJvJfQ=
         "]]},
       RowBox[{
         TagBox["y", HoldForm], "\[Equal]", 
         RowBox[{"2", " ", 
           RowBox[{"Sin", "[", 
             RowBox[{"4", " ", 
               TagBox["x", HoldForm]}], "]"}]}]}]],
      Annotation[#, HoldForm[$CellContext`y] == 
       2 Sin[4 HoldForm[$CellContext`x]], "Tooltip"]& ]}], {}},
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "GridLinesInFront" -> 
    True},
  PlotRange->{{-2, 2}, {-2, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.9356074140083427`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"39c5c781-64d7-48fd-95ed-5f2b02a581fd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Find the points of intersection of a circle of radius 1 centered at the \
origin and the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{"2", 
     RowBox[{"Sin", "[", 
      RowBox[{"4", "x"}], "]"}]}]}], TraditionalForm]],ExpressionUUID->
  "e6b63c9b-6bc4-4e16-a6a0-5f4331d632b5"],
 ". Use N[] to convert the solutions to approximate numerical values. (Hint: \
Solve the system over the real numbers.)"
}], "ItemNumbered",
 CellChangeTimes->{{3.935441095822714*^9, 3.935441207031996*^9}, {
  3.9354413869556293`*^9, 3.935441386955652*^9}, {3.9356074691028767`*^9, 
  3.935607469105526*^9}},ExpressionUUID->"4b48d1b1-9a80-49d3-8e67-\
16534e8d4f06"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"x", "^", "2"}], "+", 
        RowBox[{"y", "^", "2"}]}], "==", "1"}], ",", 
      RowBox[{"y", "==", 
       RowBox[{"2", 
        RowBox[{"Sin", "[", 
         RowBox[{"4", "x"}], "]"}]}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ",", "Reals"}], "]"}], "]"}]], "Code",
 CellChangeTimes->{{3.935441095822714*^9, 3.935441207031996*^9}, {
  3.9354413869556293`*^9, 3.935441386955652*^9}, {3.935607473355702*^9, 
  3.935607499963683*^9}},ExpressionUUID->"78a31680-c084-4b77-9e33-\
a542ecf55410"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", "0.8516797704266846`"}]}], ",", 
     RowBox[{"y", "\[Rule]", "0.5240625617671519`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", "0.6932359622903996`"}]}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{"-", "0.7207106913230187`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", "0.1296825503300682`"}]}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{"-", "0.991555563818735`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "0.1296825503300682`"}], ",", 
     RowBox[{"y", "\[Rule]", "0.991555563818735`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "0.6932359622903996`"}], ",", 
     RowBox[{"y", "\[Rule]", "0.7207106913230187`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "0.8516797704266846`"}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{"-", "0.5240625617671519`"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9356074898632708`*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"27c69e01-b9d3-4e33-b437-ffffc53bcd01"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Find the approximate coordinates of the points of intersection of a circle \
of radius 1 centered at the origin and the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{"2", 
     RowBox[{"Sin", "[", 
      RowBox[{"4", "x"}], "]"}]}]}], TraditionalForm]],ExpressionUUID->
  "a33d544f-e4c5-4934-b5ab-357142a76dae"],
 ". "
}], "ItemNumbered",
 CellChangeTimes->{{3.935441095822714*^9, 3.93544123678198*^9}, {
  3.9354413750188704`*^9, 3.9354413750189037`*^9}, {3.935442766658934*^9, 
  3.935442770702072*^9}, {3.935607506080885*^9, 
  3.9356075074360323`*^9}},ExpressionUUID->"a9f392e6-979b-4358-a3a6-\
304165aedb6a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x", "^", "2"}], "+", 
       RowBox[{"y", "^", "2"}]}], "==", "1"}], ",", 
     RowBox[{"y", "==", 
      RowBox[{"2", 
       RowBox[{"Sin", "[", 
        RowBox[{"4", "x"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}], ",", "Reals"}], "]"}]], "Code",
 CellChangeTimes->{{3.935441095822714*^9, 3.93544123678198*^9}, {
  3.9354413750188704`*^9, 3.9354413750189037`*^9}, {3.935442766658934*^9, 
  3.935442770702072*^9}, {3.935607506080885*^9, 3.935607516667762*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"11ea22c1-fe38-46fc-b2c6-f3de473eb019"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", "0.8516797704266846`"}]}], ",", 
     RowBox[{"y", "\[Rule]", "0.5240625617671518`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", "0.6932359622903996`"}]}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{"-", "0.7207106913230188`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", "0.1296825503300682`"}]}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{"-", "0.9915555638187349`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "0.1296825503300682`"}], ",", 
     RowBox[{"y", "\[Rule]", "0.9915555638187349`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "0.6932359622903996`"}], ",", 
     RowBox[{"y", "\[Rule]", "0.7207106913230188`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "0.8516797704266846`"}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{"-", "0.5240625617671518`"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.935607517569428*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"ac4aafae-270c-4e06-a127-2e46a611b4b4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Consider the solutions found in exercise 12. Plug the last solution into \
the expression ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["y", "2"], "/", "4"}], "+", 
    RowBox[{
     SuperscriptBox["cos", "2"], "(", 
     RowBox[{"4", "x"}], ")"}]}], TraditionalForm]],ExpressionUUID->
  "6c290c0a-4c60-4fdc-a9b0-7e05fc268250"],
 " and use N[] to find its approximate numerical value."
}], "ItemNumbered",
 CellChangeTimes->{{3.935441095822714*^9, 3.935441207031996*^9}, {
  3.935441263668401*^9, 3.935441274554043*^9}, {3.9354413674628477`*^9, 
  3.935441367462921*^9}, {3.93544211177529*^9, 3.93544214484753*^9}, {
  3.935442774587783*^9, 3.935442839867584*^9}, {3.9356076517569647`*^9, 
  3.935607651759062*^9}},ExpressionUUID->"a2e23c54-bae1-46ee-a258-\
ad60dd302d03"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"x", "^", "2"}], "+", 
         RowBox[{"y", "^", "2"}]}], "==", "1"}], ",", 
       RowBox[{"y", "==", 
        RowBox[{"2", 
         RowBox[{"Sin", "[", 
          RowBox[{"4", "x"}], "]"}]}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], ",", "Reals"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"val", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"y", "^", "2"}], "/", "4"}], "+", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"4", "x"}], "]"}], "^", "2"}]}], "/.", 
   RowBox[{"Last", "@", "sol"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", "val", "]"}]}], "Code",
 CellChangeTimes->{{3.935441095822714*^9, 3.935441207031996*^9}, {
  3.935441263668401*^9, 3.935441274554043*^9}, {3.9354413674628477`*^9, 
  3.935441367462921*^9}, {3.93544211177529*^9, 3.93544214484753*^9}, {
  3.935442774587783*^9, 3.935442839867584*^9}, {3.935607651985175*^9, 
  3.935607658900354*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"593d5d6b-0b85-445a-a223-814dd61ee7c7"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"Cos", "[", 
    RowBox[{"4", " ", 
     TemplateBox[<|"icon" -> "EqnRoot", "small" -> InterpretationBox[
         StyleBox[
          TemplateBox[{"\"0.852\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"]]}, 
           "RowDefault"], ShowStringCharacters -> False], 
         0.85167977042668463472097073463373817503`15.954589770191003, 
         Editable -> False], "approx" -> 0.8516797704266846, "interp" -> 
       InterpretationBox["", 
         Root[{-1 + 4 Sin[4 #]^2 + #^2& , 
           0.85167977042668461570224880235731399619`20.494688781856485}]], 
       "head" -> "Root", "big" -> RowBox[{
          RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"4", " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", 
                 RowBox[{"4", " ", "#1"}], "]"}], "2"]}], "+", 
            SuperscriptBox["#1", "2"]}], "&"}], "location" -> 
       "0.85167977042668461570224880235731399619`20.494688781856485", 
       "multiplicity" -> "1"|>,
      "NumericalApproximationInterp",
      InterpretationFunction->(Slot["interp"]& )]}], "]"}], "2"], "+", 
  SuperscriptBox[
   RowBox[{"Sin", "[", 
    RowBox[{"4", " ", 
     TemplateBox[<|"icon" -> "EqnRoot", "small" -> InterpretationBox[
         StyleBox[
          TemplateBox[{"\"0.852\"", 
            DynamicBox[
             FEPrivate`FrontEndResource[
             "FEExpressions", "NumericalApproximationElider"]]}, 
           "RowDefault"], ShowStringCharacters -> False], 
         0.85167977042668463472097073463373817503`15.954589770191003, 
         Editable -> False], "approx" -> 0.8516797704266846, "interp" -> 
       InterpretationBox["", 
         Root[{-1 + 4 Sin[4 #]^2 + #^2& , 
           0.85167977042668461570224880235731399619`20.494688781856485}]], 
       "head" -> "Root", "big" -> RowBox[{
          RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"4", " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", 
                 RowBox[{"4", " ", "#1"}], "]"}], "2"]}], "+", 
            SuperscriptBox["#1", "2"]}], "&"}], "location" -> 
       "0.85167977042668461570224880235731399619`20.494688781856485", 
       "multiplicity" -> "1"|>,
      "NumericalApproximationInterp",
      InterpretationFunction->(Slot["interp"]& )]}], "]"}], "2"]}]], "Output",\

 CellChangeTimes->{3.9356076719739428`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"e6000e4b-e85a-47f8-bb0c-b16be54815c5"],

Cell[BoxData["0.9999999999999999`"], "Output",
 CellChangeTimes->{3.935607671993038*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"9f44ebc3-b8ea-4c17-889b-fb1ebfee6df5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Consider the solutions found in exercise 12. Plug all the solutions into \
the expression ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", "2"], "+", "4", "-", 
    RowBox[{"4", 
     RowBox[{
      SuperscriptBox["cos", "2"], "(", 
      RowBox[{"4", "x"}], ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "3091ec6d-f3b5-4ce2-a35f-586251555cab"],
 " and use FullSimplify[] on the list of values. Explain the simplicity of \
the result."
}], "ItemNumbered",
 CellChangeTimes->{{3.935441095822714*^9, 3.935441207031996*^9}, {
  3.935441263668401*^9, 3.935441274554043*^9}, {3.9354413674628477`*^9, 
  3.935441367462921*^9}, {3.93544211177529*^9, 3.93544214484753*^9}, {
  3.935442774587783*^9, 3.935442867946278*^9}, {3.935442916365016*^9, 
  3.935442981496492*^9}, {3.935607703820557*^9, 
  3.9356077038217382`*^9}},ExpressionUUID->"6dda9e0b-947b-4476-a69e-\
90f172189b38"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"x", "^", "2"}], "+", 
         RowBox[{"y", "^", "2"}]}], "==", "1"}], ",", 
       RowBox[{"y", "==", 
        RowBox[{"2", 
         RowBox[{"Sin", "[", 
          RowBox[{"4", "x"}], "]"}]}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], ",", "Reals"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"x", "^", "2"}], "+", "4", "-", 
    RowBox[{"4", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"4", "x"}], "]"}], "^", "2"}]}]}], "/.", "sol"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", "%", "]"}]}], "Code",
 CellChangeTimes->{{3.935441095822714*^9, 3.935441207031996*^9}, {
  3.935441263668401*^9, 3.935441274554043*^9}, {3.9354413674628477`*^9, 
  3.935441367462921*^9}, {3.93544211177529*^9, 3.93544214484753*^9}, {
  3.935442774587783*^9, 3.935442867946278*^9}, {3.935442916365016*^9, 
  3.935442981496492*^9}, {3.935607705226201*^9, 3.935607705229953*^9}, {
  3.935607850620235*^9, 3.935607945209176*^9}, {3.935607980025507*^9, 
  3.9356079904099293`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"62f8148e-b232-4e3b-90a1-a0bb75a2dec2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.935607869287817*^9, 3.935607901094359*^9, 
  3.935607991707505*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"b60e0bb4-86f7-4dad-a2ae-602029f97e91"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Answers", "Subsubsubsection",
 CellChangeTimes->{{3.935438654158787*^9, 
  3.9354386549567127`*^9}},ExpressionUUID->"ee04a5db-cefe-487f-a838-\
e3c048f90c55"],

Cell[CellGroupData[{

Cell[TextData[{
 "Find all exact solutions to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "4"], "-", 
     RowBox[{"4", "x"}], "+", "3"}], "=", "0"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "38421be1-729f-47fd-8e3e-bd48e2c5fd6f"],
 "."
}], "ItemNumbered",
 CellChangeTimes->{{3.935438439384454*^9, 3.935438479470388*^9}, 
   3.935438552890334*^9, {3.93543859891101*^9, 3.935438599193779*^9}, {
   3.935474505382352*^9, 
   3.935474506195613*^9}},ExpressionUUID->"31c27a73-919e-4fb0-83de-\
bfd34717b9ca"],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   FormBox[
    RowBox[{
     RowBox[{
      RowBox[{"x", "^", "4"}], "-", 
      RowBox[{"4", "x"}], "+", "3"}], "==", "0"}],
    TraditionalForm], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.9354384843772697`*^9, 3.935438539183591*^9}},
 CellLabel->
  "In[170]:=",ExpressionUUID->"ba7f0d35-7bc8-4457-9440-05294a85017f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Find the exact real solutions to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "4"], "-", 
     RowBox[{"4", "x"}], "+", "3"}], "=", "0"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "133d4bc1-78db-4c9b-95e2-5d6f5c4bf1fb"],
 "."
}], "ItemNumbered",
 CellChangeTimes->{{3.935438439384454*^9, 3.935438479470388*^9}, 
   3.935438552890334*^9, {3.935438592256034*^9, 3.935438592688326*^9}, {
   3.935474509712023*^9, 
   3.935474510408102*^9}},ExpressionUUID->"620fc07d-6420-47e7-a918-\
086e541f63af"],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   FormBox[
    RowBox[{
     RowBox[{
      RowBox[{"x", "^", "4"}], "-", 
      RowBox[{"4", "x"}], "+", "3"}], "==", "0"}],
    TraditionalForm], ",", "x", ",", "Reals"}], "]"}]], "Input",
 CellChangeTimes->{{3.9354384843772697`*^9, 3.935438539183591*^9}, {
  3.935438686968989*^9, 3.9354386878168716`*^9}},
 CellLabel->
  "In[171]:=",ExpressionUUID->"88b46ad0-4677-48bc-900b-e5e0c5737e01"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Find all approximate solutions to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "4"], "-", 
     RowBox[{"4", "x"}], "+", "3"}], "=", "0"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "2f2c9a2b-09a5-4d5b-ac55-26a50a39f15e"],
 "."
}], "ItemNumbered",
 CellChangeTimes->{{3.935438439384454*^9, 3.935438479470388*^9}, 
   3.935438552890334*^9, {3.93543859891101*^9, 3.935438613555607*^9}, {
   3.9354745129831667`*^9, 
   3.935474514667069*^9}},ExpressionUUID->"e91c9475-1d70-45ae-a18c-\
fe9ad7756813"],

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   FormBox[
    RowBox[{
     RowBox[{
      RowBox[{"x", "^", "4"}], "-", 
      RowBox[{"4", "x"}], "+", "3"}], "==", "0"}],
    TraditionalForm], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.9354384843772697`*^9, 3.935438539183591*^9}, 
   3.935438695588222*^9},
 CellLabel->
  "In[172]:=",ExpressionUUID->"f5338c53-1cfd-4d6a-84e1-6d607dcf24a0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Find the approximate real solutions to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "4"], "-", 
     RowBox[{"4", "x"}], "+", "3"}], "=", "0"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "7567e369-0a1e-4bec-bf49-e6c7945292ea"],
 "."
}], "ItemNumbered",
 CellChangeTimes->{{3.935438439384454*^9, 3.935438479470388*^9}, 
   3.935438552890334*^9, {3.935438592256034*^9, 3.935438622260851*^9}, {
   3.935474517258419*^9, 
   3.935474518202623*^9}},ExpressionUUID->"9bd29d55-5457-4e38-a925-\
48ebb2d41d78"],

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   FormBox[
    RowBox[{
     RowBox[{
      RowBox[{"x", "^", "4"}], "-", 
      RowBox[{"4", "x"}], "+", "3"}], "==", "0"}],
    TraditionalForm], ",", "x", ",", "Reals"}], "]"}]], "Input",
 CellChangeTimes->{{3.9354384843772697`*^9, 3.935438539183591*^9}, {
  3.935438705172164*^9, 3.935438710839427*^9}},
 CellLabel->
  "In[173]:=",ExpressionUUID->"16905078-a7d4-4fa2-bc31-8f8323d554c1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Find an approximate solution to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Tan", "[", "x", "]"}], "=", "x"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "2a1c618d-cff2-489a-bb28-b395ac187c56"],
 " near ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "7.5"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "2da95194-61b1-4d60-b423-2233339f3b83"],
 "."
}], "ItemNumbered",
 CellChangeTimes->{{3.935438439384454*^9, 3.935438479470388*^9}, 
   3.935438552890334*^9, {3.935438592256034*^9, 3.935438622260851*^9}, {
   3.9354388646374083`*^9, 3.935438903104821*^9}, {3.935438943935502*^9, 
   3.935438944787723*^9}},ExpressionUUID->"3ca6b7cc-97e0-4851-9d0b-\
20b700eceffe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   FormBox[
    RowBox[{
     RowBox[{"Tan", "[", "x", "]"}], "==", "x"}],
    TraditionalForm], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "7.5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9354384843772697`*^9, 3.935438539183591*^9}, {
  3.935438705172164*^9, 3.935438710839427*^9}, {3.935438908677229*^9, 
  3.935438949998117*^9}},
 CellLabel->
  "In[175]:=",ExpressionUUID->"cb6d0ff9-1826-4397-b4eb-b372932b6750"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", "\[Rule]", "7.725251836937707`"}], "}"}]], "Output",
 CellChangeTimes->{{3.935438930067329*^9, 3.9354389506045027`*^9}},
 CellLabel->
  "Out[175]=",ExpressionUUID->"8fd2f729-1f77-4ffa-8fce-7d2600dc047f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Solve ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"a", "\[VeryThinSpace]", 
     SuperscriptBox["e", 
      RowBox[{"k", "\[VeryThinSpace]", "x"}]]}], "=", "p"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "f0bf26db-2e1d-4784-8c90-a1bfbc8472c1"],
 " for real values of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "eabd7c70-7d7c-419a-b8c9-60fb44f5744a"],
 "."
}], "ItemNumbered",
 CellChangeTimes->{{3.935439640045178*^9, 3.935439647181439*^9}, {
  3.935439742061041*^9, 
  3.935439776815043*^9}},ExpressionUUID->"55aabc26-74a7-48a9-b08e-\
d26112c626fe"],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"a", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{"k", "*", "x"}], "]"}]}], "==", "p"}], ",", "x", ",", "Reals"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.935439663638134*^9, 3.935439699505301*^9}, {
  3.935439781089986*^9, 3.9354398052891483`*^9}},
 CellLabel->
  "In[184]:=",ExpressionUUID->"4ea13a55-e73f-4308-86c8-e6ce2cfdedcb"]
}, Open  ]],

Cell[TextData[{
 "Graphically show approximately the values of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "486c3ba1-f272-49a6-bcad-64cca4ac71ca"],
 " where the graphs of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"2", 
     SuperscriptBox["x", "4"]}], "+", 
    SuperscriptBox["x", "3"], "+", 
    RowBox[{"8", "x", " ", 
     RowBox[{"sin", "(", 
      RowBox[{"2", "x"}], ")"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "1e059a80-248b-4b3e-8825-9a0e856c389d"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", "4"], "-", 
    SuperscriptBox["x", "2"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "f637d4cd-0de6-4b31-b9e6-d3b62a864cf4"],
 " intersect."
}], "ItemNumbered",
 CellChangeTimes->{{3.9354402479481697`*^9, 
  3.9354403897242327`*^9}},ExpressionUUID->"a7cf9084-0443-4e27-b786-\
969f4ceccf49"],

Cell["Most straightforward, but maybe not best:", "Text",
 CellChangeTimes->{{3.935440496409964*^9, 3.9354405060069723`*^9}},
 FontSlant->"Italic",ExpressionUUID->"5d16bb74-11cd-4193-a33f-755495acf1a1"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"2", 
       RowBox[{"x", "^", "4"}]}], "+", 
      RowBox[{"x", "^", "3"}], "+", 
      RowBox[{"8", "x", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", "x"}], "]"}]}]}], ",", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", "^", "4"}], "-", 
       RowBox[{"x", "^", "2"}]}], ")"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.935439849964673*^9, 3.9354401280392523`*^9}, {
  3.9354402029788094`*^9, 3.935440233460585*^9}, {3.9354403928216457`*^9, 
  3.93544041978194*^9}},
 CellLabel->
  "In[222]:=",ExpressionUUID->"8a09ee5e-86f3-4dce-ae7f-c9ee32f08723"],

Cell["A little better:", "Text",
 CellChangeTimes->{{3.935440476097898*^9, 3.93544048160915*^9}},
 FontSlant->"Italic",ExpressionUUID->"7f870987-ceb3-496e-8065-e482b2c9c809"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", 
       RowBox[{"x", "^", "4"}]}], "+", 
      RowBox[{"x", "^", "3"}], "+", 
      RowBox[{"8", "x", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", "x"}], "]"}]}]}], ")"}], "-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", "^", "4"}], "-", 
      RowBox[{"x", "^", "2"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.935439849964673*^9, 3.9354401280392523`*^9}, {
  3.9354402029788094`*^9, 3.935440233460585*^9}, {3.9354403928216457`*^9, 
  3.935440432407346*^9}},
 CellLabel->
  "In[221]:=",ExpressionUUID->"701f91ee-bea6-47a7-bd4c-d45b3ec9650d"],

Cell[TextData[{
 "Shows the values of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "e3f93bac-0a32-4e7f-bbfa-389ab4e7b296"],
 " best but does not show these are the only roots:"
}], "Text",
 CellChangeTimes->{{3.935440518162155*^9, 3.935440554269005*^9}},
 FontSlant->"Italic",ExpressionUUID->"cb291b5c-9d5a-47d9-87d6-bde2a42cfb60"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", 
       RowBox[{"x", "^", "4"}]}], "+", 
      RowBox[{"x", "^", "3"}], "+", 
      RowBox[{"8", "x", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", "x"}], "]"}]}]}], ")"}], "-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", "^", "4"}], "-", 
      RowBox[{"x", "^", "2"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2.3"}], ",", "0.5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.935439849964673*^9, 3.9354401280392523`*^9}, {
  3.9354402029788094`*^9, 3.935440233460585*^9}, {3.9354403928216457`*^9, 
  3.9354404639478292`*^9}},
 CellLabel->
  "In[223]:=",ExpressionUUID->"106148a0-fc32-4522-bfb6-b321af8c3d53"],

Cell["\<\
Combining the last two makes for the best answer. You should keep in mind \
what is to be shown. If it takes two plots to show it all, use two plots.\
\>", "Text",
 CellChangeTimes->{{3.9354405719844847`*^9, 3.935440633808342*^9}},
 FontSlant->"Italic",ExpressionUUID->"c0115ab5-0939-4b41-80e3-b29e484eb6c3"],

Cell[CellGroupData[{

Cell[TextData[{
 "Try to find the exact values of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "017e5132-ec6c-4c7d-b860-d0ba65a595c7"],
 " where the graphs of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"2", 
     SuperscriptBox["x", "4"]}], "+", 
    SuperscriptBox["x", "3"], "+", 
    RowBox[{"8", "x", " ", 
     RowBox[{"sin", "(", 
      RowBox[{"2", "x"}], ")"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b3598342-e2c6-4e39-b5cf-6fc81c0042ec"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", "4"], "-", 
    SuperscriptBox["x", "2"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "1fda0bf9-a62b-4c73-b2ca-7aa9f8db19ea"],
 " intersect; comment on your success, given the result in exercise 7."
}], "ItemNumbered",
 CellChangeTimes->{{3.9354402479481697`*^9, 3.9354403678543377`*^9}, {
  3.935440653605237*^9, 
  3.9354406887172127`*^9}},ExpressionUUID->"974ae721-88c8-4716-a303-\
6d1c8908fbd9"],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"2", 
       RowBox[{"x", "^", "4"}]}], "+", 
      RowBox[{"x", "^", "3"}], "+", 
      RowBox[{"8", "x", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", "x"}], "]"}]}]}], "==", 
     RowBox[{
      RowBox[{"x", "^", "4"}], "-", 
      RowBox[{"x", "^", "2"}]}]}], "}"}], ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.935439849964673*^9, 3.935440178124448*^9}},
 CellLabel->
  "In[214]:=",ExpressionUUID->"44f2b21f-66da-410b-969a-08988dce8a08"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Use a simple NSolve[] command to try to find the approximate values of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "092e1cfa-6d31-456e-a95f-651ce6397498"],
 " where the graphs of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"2", 
     SuperscriptBox["x", "4"]}], "+", 
    SuperscriptBox["x", "3"], "+", 
    RowBox[{"8", "x", " ", 
     RowBox[{"sin", "(", 
      RowBox[{"2", "x"}], ")"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "a22446c6-1a6e-412d-b722-6f4928406ed0"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", "4"], "-", 
    SuperscriptBox["x", "2"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "22d9fda3-971a-4850-9e05-1582135c8701"],
 " intersect; comment on your success, given the result in exercise 7."
}], "ItemNumbered",
 CellChangeTimes->{{3.9354402479481697`*^9, 3.9354403678543377`*^9}, {
  3.935440653605237*^9, 3.9354407261613493`*^9}, {3.935440818376075*^9, 
  3.9354408214665318`*^9}},ExpressionUUID->"2630dfe0-eff1-438c-9613-\
9b9c986a02d4"],

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"2", 
       RowBox[{"x", "^", "4"}]}], "+", 
      RowBox[{"x", "^", "3"}], "+", 
      RowBox[{"8", "x", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", "x"}], "]"}]}]}], "==", 
     RowBox[{
      RowBox[{"x", "^", "4"}], "-", 
      RowBox[{"x", "^", "2"}]}]}], "}"}], ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.935439849964673*^9, 3.935440187672092*^9}},
 CellLabel->
  "In[215]:=",ExpressionUUID->"d6bfc917-a730-42e2-b879-7294ee0e6b2d"]
}, Open  ]],

Cell[TextData[{
 "Use FindRoot[] to find the approximate values of all ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "55b50f60-14e9-48f6-a49a-ea8b2321dd3c"],
 " where the graphs of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"2", 
     SuperscriptBox["x", "4"]}], "+", 
    SuperscriptBox["x", "3"], "+", 
    RowBox[{"8", "x", " ", 
     RowBox[{"sin", "(", 
      RowBox[{"2", "x"}], ")"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "e439deae-3b4d-4921-ac65-aa9bd3d074b6"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", "4"], "-", 
    SuperscriptBox["x", "2"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "fc313c92-db38-4468-9e28-7d2a806ea8b8"],
 " intersect; see exercise 7."
}], "ItemNumbered",
 CellChangeTimes->{{3.9354402479481697`*^9, 3.9354403678543377`*^9}, {
  3.935440653605237*^9, 3.9354407261613493`*^9}, {3.935440806928935*^9, 
  3.9354408666772747`*^9}},ExpressionUUID->"cb225fc1-26c6-4e64-8246-\
9f8b3942879e"],

Cell["There are three solutions, so you need three commands:", "Text",
 CellChangeTimes->{{3.935440945176888*^9, 3.9354409603390827`*^9}},
 FontSlant->"Italic",ExpressionUUID->"f204338c-05ab-42bf-95d3-3badcfb21c8e"],

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"2", 
      RowBox[{"x", "^", "4"}]}], "+", 
     RowBox[{"x", "^", "3"}], "+", 
     RowBox[{"8", "x", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", "x"}], "]"}]}]}], "==", 
    RowBox[{
     RowBox[{"x", "^", "4"}], "-", 
     RowBox[{"x", "^", "2"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.935440877994302*^9, 3.935440898652083*^9}},
 CellLabel->
  "In[224]:=",ExpressionUUID->"72a8e532-212c-448a-a76c-22abd4e9d043"],

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"2", 
      RowBox[{"x", "^", "4"}]}], "+", 
     RowBox[{"x", "^", "3"}], "+", 
     RowBox[{"8", "x", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", "x"}], "]"}]}]}], "==", 
    RowBox[{
     RowBox[{"x", "^", "4"}], "-", 
     RowBox[{"x", "^", "2"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1.9"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.935440877994302*^9, 3.935440928081334*^9}},
 CellLabel->
  "In[228]:=",ExpressionUUID->"eee3a30e-784c-4c8d-a692-de75c1c72767"],

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"2", 
      RowBox[{"x", "^", "4"}]}], "+", 
     RowBox[{"x", "^", "3"}], "+", 
     RowBox[{"8", "x", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", "x"}], "]"}]}]}], "==", 
    RowBox[{
     RowBox[{"x", "^", "4"}], "-", 
     RowBox[{"x", "^", "2"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2.2"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.935440877994302*^9, 3.935440919382382*^9}},
 CellLabel->
  "In[227]:=",ExpressionUUID->"f341244a-38d1-4820-a479-cc606236d381"],

Cell["\<\
How can you be sure whether you found all the solutions in exercises \
7\[Dash]10?\
\>", "ItemNumbered",
 CellChangeTimes->{{3.93547462724931*^9, 
  3.935474659964673*^9}},ExpressionUUID->"d668550c-7303-4eca-8fc1-\
0cfd2746a651"],

Cell[TextData[{
 "If we solve for the sine term we get\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"8", "x", " ", 
     RowBox[{"sin", "(", 
      RowBox[{"2", "x"}], ")"}]}], "=", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["x", "4"]}], "-", 
     SuperscriptBox["x", "3"], "-", 
     SuperscriptBox["x", "2"]}]}], TraditionalForm]],
  FormatType->TraditionalForm,
  FontWeight->"Plain",
  FontSlant->"Plain",ExpressionUUID->"80aac4c3-fead-4fa8-b994-de00bedaaf6d"],
 ",\nwhich implies\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"8", " ", 
     RowBox[{"sin", "(", 
      RowBox[{"2", "x"}], ")"}]}], "=", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["x", "3"]}], "-", 
     SuperscriptBox["x", "2"], "-", "x"}]}], TraditionalForm]],
  FormatType->TraditionalForm,
  FontWeight->"Plain",
  FontSlant->"Plain",ExpressionUUID->"92685f41-b39a-47e5-912a-b2b7eaee9dee"],
 ",\nThe left-hand side ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FormBox[
     TemplateBox[{
       RowBox[{"8", 
         RowBox[{"sin", "(", 
           RowBox[{"2", " ", "x"}], ")"}]}]},
      "Abs"],
     TraditionalForm], "<", "8"}], TraditionalForm]],
  FormatType->TraditionalForm,
  FontWeight->"Plain",
  FontSlant->"Plain",ExpressionUUID->"0cdb470c-eadd-478e-b2a2-302154c8f559"],
 " since sines and cosines stay between ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[PlusMinus]", "1"}], TraditionalForm]],
  FormatType->TraditionalForm,
  FontWeight->"Plain",
  FontSlant->"Plain",ExpressionUUID->"f58e589f-fabe-4198-a59e-7ac0e678c1d3"],
 ". The right-hand side ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FormBox[
     TemplateBox[{
       RowBox[{
         RowBox[{"-", 
           RowBox[{
             SuperscriptBox["x", "3"]}]}], "-", 
         SuperscriptBox["x", "2"], "-", "x"}]},
      "Abs"],
     TraditionalForm], "=", 
    RowBox[{
     FormBox[
      TemplateBox[{"x"},
       "Abs"],
      TraditionalForm], 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x", "2"], "+", "x", "+", "1"}], ")"}]}]}], 
   TraditionalForm]],
  FormatType->TraditionalForm,
  FontWeight->"Plain",
  FontSlant->"Plain",ExpressionUUID->"8df46ada-24e3-48a4-a636-8d7528a1038e"],
 ", since ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", "2"], "+", "x", "+", "1"}], TraditionalForm]],
  FormatType->TraditionalForm,
  FontWeight->"Plain",
  FontSlant->"Plain",ExpressionUUID->"94b27ef3-f5d1-49af-b5f5-d649a5defe1a"],
 " has no roots and is positive. If ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],
  FormatType->TraditionalForm,
  FontWeight->"Plain",
  FontSlant->"Plain",ExpressionUUID->"00711dac-9bbb-4672-8484-04ecf89f5312"],
 " is less than ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "3"}], TraditionalForm]],
  FormatType->TraditionalForm,
  FontWeight->"Plain",
  FontSlant->"Plain",ExpressionUUID->"d12d5705-99ac-4ff3-98b2-46e84b6f70ca"],
 " or greater than ",
 Cell[BoxData[
  FormBox["2", TraditionalForm]],
  FormatType->TraditionalForm,
  FontWeight->"Plain",
  FontSlant->"Plain",ExpressionUUID->"1e8261f2-96a4-40e3-9ca8-e497126889b8"],
 ", then the right-hand side is greater than ",
 Cell[BoxData[
  FormBox["21", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "e86dcae4-7fa5-4e2c-8878-c2f95cad2edc"],
 " or ",
 Cell[BoxData[
  FormBox["14", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "3169b1d2-8993-457d-8102-bfdaba810cd4"],
 " respectively."
}], "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.935474690054553*^9, 3.935474811934803*^9}, {
  3.935474926573284*^9, 3.9354750085366707`*^9}, {3.935475058447317*^9, 
  3.9354752951628323`*^9}, {3.9354753957864037`*^9, 3.935475455710862*^9}, {
  3.935475532035573*^9, 3.935475543069147*^9}, {3.9354756532690687`*^9, 
  3.935475718446406*^9}, {3.935475768813163*^9, 3.935475775508116*^9}},
 FontSlant->"Italic",ExpressionUUID->"7acaaddd-8be4-438a-b824-a0467734e352"],

Cell[CellGroupData[{

Cell[TextData[{
 "Graphically show the points of intersection of a circle of radius 1 \
centered at the origin and the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{"2", 
     RowBox[{"Sin", "[", 
      RowBox[{"4", "x"}], "]"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "d02e187a-915d-45d5-b230-62f112534c1c"],
 "."
}], "ItemNumbered",
 CellChangeTimes->{{3.935441095822714*^9, 3.935441207031996*^9}, {
  3.935441263668401*^9, 3.935441274554043*^9}, {3.9354413674628477`*^9, 
  3.935441367462921*^9}},ExpressionUUID->"d0ae8c6f-527d-4f12-9f8c-\
7964d8283b2c"],

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x", "^", "2"}], "+", 
       RowBox[{"y", "^", "2"}]}], "==", "1"}], ",", 
     RowBox[{"y", "==", 
      RowBox[{"2", 
       RowBox[{"Sin", "[", 
        RowBox[{"4", "x"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.935441284731254*^9, 3.935441358604815*^9}},
 CellLabel->
  "In[240]:=",ExpressionUUID->"fa0ccdc6-1315-49d3-b808-2bfa40bad3ee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Find the points of intersection of a circle of radius 1 centered at the \
origin and the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{"2", 
     RowBox[{"Sin", "[", 
      RowBox[{"4", "x"}], "]"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "12d06721-6f0c-4ae3-a2f6-10d26ad0ddee"],
 ". Use N[] to convert the solutions to approximate numerical values. (Hint: \
Solve the system over the real numbers.)"
}], "ItemNumbered",
 CellChangeTimes->{{3.935441095822714*^9, 3.935441207031996*^9}, {
  3.9354413869556293`*^9, 
  3.935441386955652*^9}},ExpressionUUID->"d0bf5a2c-30b5-4734-b535-\
fb92db1912fd"],

Cell[BoxData[{
 RowBox[{"sol", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"x", "^", "2"}], "+", 
        RowBox[{"y", "^", "2"}]}], "==", "1"}], ",", 
      RowBox[{"y", "==", 
       RowBox[{"2", 
        RowBox[{"Sin", "[", 
         RowBox[{"4", "x"}], "]"}]}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ",", "Reals"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", "sol", "]"}]}], "Input",
 CellChangeTimes->{{3.935441015305747*^9, 3.935441085479274*^9}, 
   3.935441377559991*^9, {3.935441577902957*^9, 3.935441583131531*^9}, 
   3.935607451384533*^9},
 CellLabel->
  "In[242]:=",ExpressionUUID->"658bbab9-80b1-4ccf-b4ea-0f4699c8cac6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Find the approximate coordinates of the points of intersection of a circle \
of radius 1 centered at the origin and the graph of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{"2", 
     RowBox[{"Sin", "[", 
      RowBox[{"4", "x"}], "]"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "499b3e5d-cfda-4ab3-87cb-562160f85ecb"],
 "."
}], "ItemNumbered",
 CellChangeTimes->{{3.935441095822714*^9, 3.93544123678198*^9}, {
  3.9354413750188704`*^9, 
  3.9354413750189037`*^9}},ExpressionUUID->"89870d04-fa75-48a0-a50f-\
ba3a90251f67"],

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x", "^", "2"}], "+", 
       RowBox[{"y", "^", "2"}]}], "==", "1"}], ",", 
     RowBox[{"y", "==", 
      RowBox[{"2", 
       RowBox[{"Sin", "[", 
        RowBox[{"4", "x"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}], ",", "Reals"}], "]"}]], "Input",
 CellChangeTimes->{{3.935441015305747*^9, 3.935441085479274*^9}, 
   3.935441377559991*^9},
 CellLabel->
  "In[241]:=",ExpressionUUID->"ddbbbe62-c23f-420a-9e99-0d126926773c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Consider the solutions found in exercise 12. Plug the last solution into \
the expression ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["y", "2"], "/", "4"}], "+", 
    RowBox[{
     SuperscriptBox["cos", "2"], "(", 
     RowBox[{"4", "x"}], ")"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "8506b469-5dfb-447e-b183-c958c8bdfc09"],
 " and use N[] to find its approximate numerical value."
}], "ItemNumbered",
 CellChangeTimes->{{3.935441095822714*^9, 3.935441207031996*^9}, {
  3.935441263668401*^9, 3.935441274554043*^9}, {3.9354413674628477`*^9, 
  3.935441367462921*^9}, {3.93544211177529*^9, 3.93544214484753*^9}, {
  3.935442774587783*^9, 
  3.935442839867584*^9}},ExpressionUUID->"4633cc8a-a6a8-47d5-be7f-\
2ecd5ad6e40a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"x", "^", "2"}], "+", 
         RowBox[{"y", "^", "2"}]}], "==", "1"}], ",", 
       RowBox[{"y", "==", 
        RowBox[{"2", 
         RowBox[{"Sin", "[", 
          RowBox[{"4", "x"}], "]"}]}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], ",", "Reals"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"val", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"y", "^", "2"}], "/", "4"}], "+", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"4", "x"}], "]"}], "^", "2"}]}], "/.", 
   RowBox[{"Last", "@", "sol"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", "val", "]"}]}], "Input",
 CellChangeTimes->{{3.9354417634506893`*^9, 3.935441940346418*^9}, {
   3.935442060797441*^9, 3.935442086001059*^9}, {3.935442158325103*^9, 
   3.9354421677926617`*^9}, {3.935442213017708*^9, 3.9354422304621887`*^9}, 
   3.935442270107942*^9, {3.9354423122466583`*^9, 3.935442322767723*^9}, {
   3.935442353906632*^9, 3.9354423905067472`*^9}, {3.935442422226664*^9, 
   3.935442422382132*^9}, {3.935442519368618*^9, 3.9354425249978247`*^9}, {
   3.935442567812354*^9, 3.9354425693670197`*^9}, {3.935442669635083*^9, 
   3.935442745410305*^9}, {3.935442852010157*^9, 
   3.935442854902272*^9}},ExpressionUUID->"98a8dfaf-8c83-4a85-9763-\
f5f16aabf9b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Consider the solutions found in exercise 12. Plug all the solutions into \
the expression ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", "2"], "+", "4", "-", 
    RowBox[{"4", 
     RowBox[{
      SuperscriptBox["cos", "2"], "(", 
      RowBox[{"4", "x"}], ")"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "49cb9f97-110b-4f2e-9ebc-c57b5e08c3d1"],
 " and use FullSimplify[] on the list of values. Explain the simplicity of \
the result."
}], "ItemNumbered",
 CellChangeTimes->{{3.935441095822714*^9, 3.935441207031996*^9}, {
  3.935441263668401*^9, 3.935441274554043*^9}, {3.9354413674628477`*^9, 
  3.935441367462921*^9}, {3.93544211177529*^9, 3.93544214484753*^9}, {
  3.935442774587783*^9, 3.935442867946278*^9}, {3.935442916365016*^9, 
  3.935442981496492*^9}},ExpressionUUID->"a482f7ed-5963-459e-8b23-\
d975ef33e95c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"x", "^", "2"}], "+", 
         RowBox[{"y", "^", "2"}]}], "==", "1"}], ",", 
       RowBox[{"y", "==", 
        RowBox[{"2", 
         RowBox[{"Sin", "[", 
          RowBox[{"4", "x"}], "]"}]}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], ",", "Reals"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"x", "^", "2"}], "+", "4", "-", 
    RowBox[{"4", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"4", "x"}], "]"}], "^", "2"}]}]}], "/.", "sol"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{{3.9354417634506893`*^9, 3.935441940346418*^9}, {
   3.935442060797441*^9, 3.935442086001059*^9}, 
   3.935443001925899*^9},ExpressionUUID->"e370db2f-4f6a-4d42-a22b-\
12564f2c1345"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1792, 960},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"14.1 for Mac OS X x86 (64-bit) (July 16, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"215da7dc-f76a-435a-8b18-f7f1e39ab404"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 319, 5, 53, "Subsection",ExpressionUUID->"9d308f56-fc00-4135-9a93-69f333e89fe7"],
Cell[CellGroupData[{
Cell[920, 31, 191, 3, 43, "Subsubsection",ExpressionUUID->"3f952694-fccf-4103-8b59-772d1df38f1e"],
Cell[1114, 36, 479, 9, 83, "Text",ExpressionUUID->"c30be2e8-8127-4da0-89ae-40c615f3903c"],
Cell[CellGroupData[{
Cell[1618, 49, 164, 3, 46, "Subsubsubsection",ExpressionUUID->"c1c32a60-8937-47c3-8309-63f106fc1e65"],
Cell[1785, 54, 1445, 28, 197, "Input",ExpressionUUID->"87b7d30b-c8ca-439a-bcda-eb1888972434",
 Evaluatable->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[3267, 87, 164, 3, 46, "Subsubsubsection",ExpressionUUID->"b33dc5c6-d928-4618-89c8-4ec460caee11"],
Cell[3434, 92, 1554, 32, 105, "Input",ExpressionUUID->"f34d7a27-4fa3-48a8-a337-33ba69a205f9",
 Evaluatable->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[5025, 129, 165, 3, 46, "Subsubsubsection",ExpressionUUID->"06bb7fd7-6a5c-4a0e-9e06-c2de1df53cd5"],
Cell[5193, 134, 801, 15, 74, "Input",ExpressionUUID->"02ce12a8-22b8-44dd-8c24-5ed205710951",
 Evaluatable->False]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[6043, 155, 280, 4, 35, "Subsubsection",ExpressionUUID->"61c11ddb-f42a-49ad-bcc6-952fae77bc30"],
Cell[6326, 161, 230, 6, 33, "Text",ExpressionUUID->"6c77210f-4984-4cbe-b0f9-032bdbf0e357"],
Cell[CellGroupData[{
Cell[6581, 171, 180, 3, 30, "Subsubsubsection",ExpressionUUID->"475cd7f4-cf47-427c-9b20-8eed2ca8f54b"],
Cell[6764, 176, 675, 16, 33, "Text",ExpressionUUID->"b168cd80-92db-457d-afb7-106149107d67"],
Cell[7442, 194, 516, 9, 55, "Text",ExpressionUUID->"d3e4adc8-da92-4cfc-9f60-5f5ec7e7c982"],
Cell[7961, 205, 541, 10, 55, "Text",ExpressionUUID->"51b57f53-351d-4a50-9910-c4739f85d72e"],
Cell[8505, 217, 679, 13, 55, "Text",ExpressionUUID->"e9fdb406-a961-408a-a848-7b5ce2f6a6e3"],
Cell[9187, 232, 929, 17, 55, "Text",ExpressionUUID->"d0378a6d-344d-4f4b-8f5b-7d0def50631a"],
Cell[10119, 251, 1765, 27, 99, "Text",ExpressionUUID->"199a45f4-87dc-4cc0-b432-9dd0be406a7e"],
Cell[CellGroupData[{
Cell[11909, 282, 15463, 373, 61, "WolframAlphaShortInput",ExpressionUUID->"97c26faf-c2f8-47a6-bff4-e8cdb4605af7"],
Cell[27375, 657, 50183, 870, 240, "Output",ExpressionUUID->"2d942b11-d313-480d-9665-f6eea8da3d34"]
}, Open  ]],
Cell[77573, 1530, 363, 7, 33, "Text",ExpressionUUID->"496f860f-641e-4f66-8ef3-2522f7428563"],
Cell[77939, 1539, 500, 9, 33, "Text",ExpressionUUID->"3615e0a0-6174-4e39-a797-ce5946825393"],
Cell[78442, 1550, 477, 9, 33, "Text",ExpressionUUID->"e7111da6-8475-49ff-b6b8-08108cdb702b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78956, 1564, 184, 3, 30, "Subsubsubsection",ExpressionUUID->"63b83ac2-16f6-4aa3-bef3-878df857870e"],
Cell[79143, 1569, 1104, 18, 77, "Text",ExpressionUUID->"b916a9f0-0684-420c-bee6-772761661d6f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80284, 1592, 221, 4, 30, "Subsubsubsection",ExpressionUUID->"226274b0-0285-49f0-9145-eff7e323ce39"],
Cell[80508, 1598, 246, 4, 33, "Text",ExpressionUUID->"ed1505bb-158b-482d-a54a-8cac0edc72e3"],
Cell[80757, 1604, 1175, 19, 70, "Input",ExpressionUUID->"0cb8b5a1-ccee-4d3a-9f16-434725e5962a",
 Evaluatable->False],
Cell[81935, 1625, 777, 14, 55, "Text",ExpressionUUID->"5ed7ea71-5a45-451c-b8fa-e720be387fdb"],
Cell[82715, 1641, 596, 13, 55, "Text",ExpressionUUID->"e9f11c48-5dda-415a-8418-ec5a17b2a3b4"],
Cell[83314, 1656, 381, 8, 33, "Text",ExpressionUUID->"43499c9c-ed75-44f1-8931-95e358f2032f"],
Cell[83698, 1666, 599, 20, 49, "Input",ExpressionUUID->"0f398ec1-5a31-4399-b865-b400b454245a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84334, 1691, 173, 3, 30, "Subsubsubsection",ExpressionUUID->"92022e07-1028-4fa2-a109-b9effaefaf85"],
Cell[84510, 1696, 1112, 23, 55, "Text",ExpressionUUID->"6f896c37-3d66-4f52-8a44-f5aefaef35c5"],
Cell[85625, 1721, 350, 7, 33, "Text",ExpressionUUID->"bc74d1c0-0c6e-4a04-8bf8-eac54f303ecd"],
Cell[85978, 1730, 267, 7, 29, "Input",ExpressionUUID->"5a41569f-3d43-48d2-9d1f-9c472c72ef57"],
Cell[86248, 1739, 155, 3, 33, "Text",ExpressionUUID->"e39c1dd6-7871-4202-9073-f60f28cc1ccf"],
Cell[CellGroupData[{
Cell[86428, 1746, 559, 17, 29, "Input",ExpressionUUID->"ad87114d-3476-4a9c-962d-e66428e0862d"],
Cell[86990, 1765, 784, 25, 33, "Output",ExpressionUUID->"a2728230-79e7-4fac-974e-915d78e542f7"]
}, Open  ]],
Cell[87789, 1793, 805, 20, 33, "Text",ExpressionUUID->"f3ad1abc-bd1b-42f8-ac56-7720a4f2a77b"],
Cell[CellGroupData[{
Cell[88619, 1817, 468, 14, 29, "Input",ExpressionUUID->"01f89127-1a25-45a5-9c3b-df3d8978c45e"],
Cell[89090, 1833, 206, 5, 33, "Output",ExpressionUUID->"57affeb4-76a3-40f1-9e54-d0b5f61d31f4"]
}, Open  ]],
Cell[89311, 1841, 179, 3, 33, "Text",ExpressionUUID->"5af09325-65d7-40a6-bec9-da7fb586e7cb"],
Cell[CellGroupData[{
Cell[89515, 1848, 356, 9, 29, "Input",ExpressionUUID->"2fd2a3d3-39a1-43b7-9c57-ace2a15c4329"],
Cell[89874, 1859, 153, 3, 33, "Output",ExpressionUUID->"df4580d1-5d58-411d-bf4a-7ef618a8d807"]
}, Open  ]],
Cell[90042, 1865, 262, 6, 33, "Text",ExpressionUUID->"8d432285-af80-4c4d-82a2-9e032d0be0fd"],
Cell[CellGroupData[{
Cell[90329, 1875, 376, 9, 29, "Input",ExpressionUUID->"f5fefdfe-8df9-47be-a1ef-dde713603e3c"],
Cell[90708, 1886, 275, 8, 33, "Output",ExpressionUUID->"9a0c3519-8e51-4c09-bff1-3a17c6d6c93d"]
}, Open  ]],
Cell[90998, 1897, 599, 13, 33, "Text",ExpressionUUID->"1eb32d05-92da-4133-8436-a7cd14df9bf6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91634, 1915, 175, 3, 30, "Subsubsubsection",ExpressionUUID->"ef608d13-eb5a-49fb-9543-8803711ebb45"],
Cell[91812, 1920, 243, 5, 33, "Text",ExpressionUUID->"f1aa8e1d-5cb3-48c3-86df-b3b7df58a130"],
Cell[92058, 1927, 518, 11, 33, "Text",ExpressionUUID->"c982733b-4416-44c2-ae19-792d382f9b33"],
Cell[CellGroupData[{
Cell[92601, 1942, 382, 10, 29, "Input",ExpressionUUID->"cfc93ffb-753b-46ff-a808-7cb7fef6ac80"],
Cell[92986, 1954, 248, 5, 33, "Output",ExpressionUUID->"29b269b1-d3b7-4359-b71e-ea50c19f3568"]
}, Open  ]],
Cell[93249, 1962, 635, 20, 29, "Input",ExpressionUUID->"709577ee-8a4a-48ab-b5ba-0019e7655037"],
Cell[93887, 1984, 268, 6, 33, "Text",ExpressionUUID->"c8ba93f2-ad02-4ae2-b268-a2f7e7f13da1"],
Cell[CellGroupData[{
Cell[94180, 1994, 647, 20, 29, "Input",ExpressionUUID->"f78834d7-7b5d-4757-b055-4dece02f2944"],
Cell[94830, 2016, 9126, 178, 257, "Output",ExpressionUUID->"2c0e5916-3d33-4f6a-bc47-96ad710efcd5"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[104017, 2201, 213, 4, 43, "Subsubsection",ExpressionUUID->"3717d3ec-5631-42f3-a380-1dba4cc47e80"],
Cell[CellGroupData[{
Cell[104255, 2209, 582, 15, 30, "ItemNumbered",ExpressionUUID->"b4db502e-c15f-4f55-82b7-9a8e9f8b6cc2"],
Cell[CellGroupData[{
Cell[104862, 2228, 502, 11, 51, "Code",ExpressionUUID->"2c149774-810f-4aff-86aa-4c75016532e8"],
Cell[105367, 2241, 665, 20, 35, "Output",ExpressionUUID->"e76d316d-d6a3-4c0a-81b2-11e18b6aa1f2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[106081, 2267, 591, 15, 30, "ItemNumbered",ExpressionUUID->"d7e8f054-ebfe-45c9-bc0b-08e3b2233f52"],
Cell[CellGroupData[{
Cell[106697, 2286, 519, 12, 51, "Code",ExpressionUUID->"0727c6ae-e3af-4a20-ac65-24566c5de096"],
Cell[107219, 2300, 303, 8, 33, "Output",ExpressionUUID->"dc7b5822-22b6-417d-a31b-3d32241f14fd"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[107571, 2314, 590, 15, 30, "ItemNumbered",ExpressionUUID->"e241d603-8816-4e1d-b55a-0c16a306106a"],
Cell[CellGroupData[{
Cell[108186, 2333, 503, 11, 51, "Code",ExpressionUUID->"bf2d5d68-5b5e-49e3-a1e8-8212da6d2056"],
Cell[108692, 2346, 700, 19, 33, "Output",ExpressionUUID->"deddc65a-001d-4b3f-a42f-9e1827ed7b77"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[109441, 2371, 594, 15, 30, "ItemNumbered",ExpressionUUID->"868d2659-69d3-47e0-9d5b-ddc18430ac9c"],
Cell[CellGroupData[{
Cell[110060, 2390, 523, 12, 51, "Code",ExpressionUUID->"81736302-dc49-439f-83c0-2dd55934d71b"],
Cell[110586, 2404, 307, 8, 33, "Output",ExpressionUUID->"5a6e8e5a-5243-498b-98f9-a404aae35d9f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[110942, 2418, 683, 18, 30, "ItemNumbered",ExpressionUUID->"355bb55d-11e4-4fdb-a97f-20e34118a855"],
Cell[CellGroupData[{
Cell[111650, 2440, 380, 9, 51, "Code",ExpressionUUID->"6a5ef2dd-0a8b-4976-bdc6-74c66637f0e9"],
Cell[112033, 2451, 243, 4, 33, "Output",ExpressionUUID->"5a8e22e7-cb95-426f-bdbd-99766a3627b4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[112325, 2461, 663, 18, 50, "ItemNumbered",ExpressionUUID->"9d739548-6b6d-463b-a9ff-be713f591735"],
Cell[CellGroupData[{
Cell[113013, 2483, 449, 11, 51, "Code",ExpressionUUID->"6730a189-4c8e-4892-932a-0f65fb6310fc"],
Cell[113465, 2496, 673, 19, 62, "Output",ExpressionUUID->"913abbcd-7821-428d-8dc2-38e8eccc139f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[114187, 2521, 924, 28, 50, "ItemNumbered",ExpressionUUID->"cb17f193-f3cb-4ad4-b1da-2a1b26f4e612"],
Cell[CellGroupData[{
Cell[115136, 2553, 922, 25, 51, "Code",ExpressionUUID->"3e359d60-72f8-4725-9375-2cd9c990aa55"],
Cell[116061, 2580, 86118, 1471, 242, "Output",ExpressionUUID->"0dd63b42-b0cb-4207-8565-9dff42526d29"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[202228, 4057, 953, 28, 30, "ItemNumbered",ExpressionUUID->"754456e5-af51-447c-a372-b86370ac33a1"],
Cell[203184, 4087, 661, 19, 51, "Code",ExpressionUUID->"108ba41f-b731-4756-8b3c-d2c56f663da0"]
}, Open  ]],
Cell[203860, 4109, 278, 6, 33, "Text",ExpressionUUID->"ef036d80-1bd6-4668-aae7-d53405bc58f2"],
Cell[204141, 4117, 473, 11, 26, "Message",ExpressionUUID->"57db72b7-0860-4b53-a492-a2cb95387218"],
Cell[204617, 4130, 244, 5, 33, "Output",ExpressionUUID->"051ce9fb-c324-4e7a-8f27-e1a81b298d0e"],
Cell[CellGroupData[{
Cell[204886, 4139, 1091, 29, 30, "ItemNumbered",ExpressionUUID->"892f3446-6489-466c-bdf8-e71edc1b9002"],
Cell[CellGroupData[{
Cell[206002, 4172, 736, 19, 51, "Code",ExpressionUUID->"9b237e13-6ba0-4e44-a58e-7d737c62cf36"],
Cell[206741, 4193, 453, 11, 26, "Message",ExpressionUUID->"3fd7a2e9-e588-43bc-8774-b6f524a656c4"],
Cell[207197, 4206, 226, 5, 33, "Output",ExpressionUUID->"6c5b7618-90a7-4331-8e56-3651e4b2b44c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[207472, 4217, 1030, 29, 30, "ItemNumbered",ExpressionUUID->"95497a50-f550-409b-ac18-fe9667f2bf60"],
Cell[CellGroupData[{
Cell[208527, 4250, 738, 19, 51, "Code",ExpressionUUID->"cb7027fb-f895-4553-9cdc-8e36e3c50f14"],
Cell[209268, 4271, 450, 10, 26, "Message",ExpressionUUID->"a115ed40-d223-498e-a95b-7dce5463a8c5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[209755, 4286, 1208, 36, 53, "Input",ExpressionUUID->"b2e34e89-d673-4112-9910-be92bf6c07f1"],
Cell[210966, 4324, 286, 6, 33, "Output",ExpressionUUID->"b2b84c60-f227-4acc-99af-f341eaf46f6f"],
Cell[211255, 4332, 251, 5, 33, "Output",ExpressionUUID->"8f220b1f-4821-4aac-97e4-97ad732c5920"]
}, Open  ]]
}, Open  ]],
Cell[211533, 4341, 290, 7, 30, "ItemNumbered",ExpressionUUID->"f069ebd3-dc75-4f93-acf5-ddef249f5d93"],
Cell[211826, 4350, 312, 5, 33, "Text",ExpressionUUID->"a446986e-45d6-442d-9787-1d31eb6d021e"],
Cell[CellGroupData[{
Cell[212163, 4359, 634, 16, 30, "ItemNumbered",ExpressionUUID->"b7ca5358-9d12-4dc6-bdf5-79c7e12f567b"],
Cell[CellGroupData[{
Cell[212822, 4379, 863, 23, 51, "Code",ExpressionUUID->"808f076a-ba58-4abe-9535-27399c03acd5"],
Cell[213688, 4404, 21432, 374, 376, "Output",ExpressionUUID->"39c5c781-64d7-48fd-95ed-5f2b02a581fd"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[235169, 4784, 691, 16, 30, "ItemNumbered",ExpressionUUID->"4b48d1b1-9a80-49d3-8e67-16534e8d4f06"],
Cell[CellGroupData[{
Cell[235885, 4804, 674, 19, 51, "Code",ExpressionUUID->"78a31680-c084-4b77-9e33-a542ecf55410"],
Cell[236562, 4825, 1260, 34, 33, "Output",ExpressionUUID->"27c69e01-b9d3-4e33-b437-ffffc53bcd01"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[237871, 4865, 657, 16, 30, "ItemNumbered",ExpressionUUID->"a9f392e6-979b-4358-a3a6-304165aedb6a"],
Cell[CellGroupData[{
Cell[238553, 4885, 703, 18, 51, "Code",ExpressionUUID->"11ea22c1-fe38-46fc-b2c6-f3de473eb019"],
Cell[239259, 4905, 1260, 34, 33, "Output",ExpressionUUID->"ac4aafae-270c-4e06-a127-2e46a611b4b4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[240568, 4945, 818, 19, 31, "ItemNumbered",ExpressionUUID->"a2e23c54-bae1-46ee-a258-ad60dd302d03"],
Cell[CellGroupData[{
Cell[241411, 4968, 1189, 33, 88, "Code",ExpressionUUID->"593d5d6b-0b85-445a-a223-814dd61ee7c7"],
Cell[242603, 5003, 2579, 58, 39, "Output",ExpressionUUID->"e6000e4b-e85a-47f8-bb0c-b16be54815c5"],
Cell[245185, 5063, 167, 2, 33, "Output",ExpressionUUID->"9f44ebc3-b8ea-4c17-889b-fb1ebfee6df5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[245401, 5071, 907, 21, 30, "ItemNumbered",ExpressionUUID->"6dda9e0b-947b-4476-a69e-90f172189b38"],
Cell[CellGroupData[{
Cell[246333, 5096, 1320, 35, 88, "Code",ExpressionUUID->"62f8148e-b232-4e3b-90a1-a0bb75a2dec2"],
Cell[247656, 5133, 284, 6, 33, "Output",ExpressionUUID->"b60e0bb4-86f7-4dad-a2ae-602029f97e91"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[247989, 5145, 163, 3, 30, "Subsubsubsection",ExpressionUUID->"ee04a5db-cefe-487f-a838-e3c048f90c55"],
Cell[CellGroupData[{
Cell[248177, 5152, 567, 16, 30, "ItemNumbered",ExpressionUUID->"31c27a73-919e-4fb0-83de-bfd34717b9ca"],
Cell[248747, 5170, 377, 11, 29, "Input",ExpressionUUID->"ba7f0d35-7bc8-4457-9440-05294a85017f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[249161, 5186, 573, 16, 30, "ItemNumbered",ExpressionUUID->"620fc07d-6420-47e7-a918-086e541f63af"],
Cell[249737, 5204, 442, 12, 29, "Input",ExpressionUUID->"88b46ad0-4677-48bc-900b-e5e0c5737e01"]
}, Open  ]],
Cell[CellGroupData[{
Cell[250216, 5221, 575, 16, 30, "ItemNumbered",ExpressionUUID->"e91c9475-1d70-45ae-a18c-fe9ad7756813"],
Cell[250794, 5239, 404, 12, 29, "Input",ExpressionUUID->"f5338c53-1cfd-4d6a-84e1-6d607dcf24a0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[251235, 5256, 579, 16, 30, "ItemNumbered",ExpressionUUID->"9bd29d55-5457-4e38-a925-48ebb2d41d78"],
Cell[251817, 5274, 441, 12, 29, "Input",ExpressionUUID->"16905078-a7d4-4fa2-bc31-8f8323d554c1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[252295, 5291, 745, 20, 30, "ItemNumbered",ExpressionUUID->"3ca6b7cc-97e0-4851-9d0b-20b700eceffe"],
Cell[CellGroupData[{
Cell[253065, 5315, 477, 13, 29, "Input",ExpressionUUID->"cb6d0ff9-1826-4397-b4eb-b372932b6750"],
Cell[253545, 5330, 247, 5, 33, "Output",ExpressionUUID->"8fd2f729-1f77-4ffa-8fce-7d2600dc047f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[253841, 5341, 662, 20, 30, "ItemNumbered",ExpressionUUID->"55aabc26-74a7-48a9-b08e-d26112c626fe"],
Cell[254506, 5363, 408, 11, 29, "Input",ExpressionUUID->"4ea13a55-e73f-4308-86c8-e6ce2cfdedcb"]
}, Open  ]],
Cell[254929, 5377, 951, 30, 30, "ItemNumbered",ExpressionUUID->"a7cf9084-0443-4e27-b786-969f4ceccf49"],
Cell[255883, 5409, 202, 2, 33, "Text",ExpressionUUID->"5d16bb74-11cd-4193-a33f-755495acf1a1"],
Cell[256088, 5413, 774, 23, 29, "Input",ExpressionUUID->"8a09ee5e-86f3-4dce-ae7f-c9ee32f08723"],
Cell[256865, 5438, 174, 2, 33, "Text",ExpressionUUID->"7f870987-ceb3-496e-8065-e482b2c9c809"],
Cell[257042, 5442, 771, 23, 29, "Input",ExpressionUUID->"701f91ee-bea6-47a7-bd4c-d45b3ec9650d"],
Cell[257816, 5467, 356, 8, 33, "Text",ExpressionUUID->"cb291b5c-9d5a-47d9-87d6-bde2a42cfb60"],
Cell[258175, 5477, 777, 23, 29, "Input",ExpressionUUID->"106148a0-fc32-4522-bfb6-b321af8c3d53"],
Cell[258955, 5502, 318, 5, 33, "Text",ExpressionUUID->"c0115ab5-0939-4b41-80e3-b29e484eb6c3"],
Cell[CellGroupData[{
Cell[259298, 5511, 1046, 31, 30, "ItemNumbered",ExpressionUUID->"974ae721-88c8-4716-a303-6d1c8908fbd9"],
Cell[260347, 5544, 588, 18, 29, "Input",ExpressionUUID->"44f2b21f-66da-410b-969a-08988dce8a08"]
}, Open  ]],
Cell[CellGroupData[{
Cell[260972, 5567, 1133, 31, 30, "ItemNumbered",ExpressionUUID->"2630dfe0-eff1-438c-9613-9b9c986a02d4"],
Cell[262108, 5600, 589, 18, 29, "Input",ExpressionUUID->"d6bfc917-a730-42e2-b879-7294ee0e6b2d"]
}, Open  ]],
Cell[262712, 5621, 1074, 31, 30, "ItemNumbered",ExpressionUUID->"cb225fc1-26c6-4e64-8246-9f8b3942879e"],
Cell[263789, 5654, 215, 2, 33, "Text",ExpressionUUID->"f204338c-05ab-42bf-95d3-3badcfb21c8e"],
Cell[264007, 5658, 581, 18, 29, "Input",ExpressionUUID->"72a8e532-212c-448a-a76c-22abd4e9d043"],
Cell[264591, 5678, 604, 19, 29, "Input",ExpressionUUID->"eee3a30e-784c-4c8d-a692-de75c1c72767"],
Cell[265198, 5699, 604, 19, 29, "Input",ExpressionUUID->"f341244a-38d1-4820-a479-cc606236d381"],
Cell[265805, 5720, 239, 6, 30, "ItemNumbered",ExpressionUUID->"d668550c-7303-4eca-8fc1-0cfd2746a651"],
Cell[266047, 5728, 3929, 121, 123, "Text",ExpressionUUID->"7acaaddd-8be4-438a-b824-a0467734e352",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[270001, 5853, 616, 16, 30, "ItemNumbered",ExpressionUUID->"d0ae8c6f-527d-4f12-9f8c-7964d8283b2c"],
Cell[270620, 5871, 673, 21, 29, "Input",ExpressionUUID->"fa0ccdc6-1315-49d3-b808-2bfa40bad3ee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[271330, 5897, 674, 17, 30, "ItemNumbered",ExpressionUUID->"d0bf5a2c-30b5-4734-b535-fb92db1912fd"],
Cell[272007, 5916, 759, 22, 49, "Input",ExpressionUUID->"658bbab9-80b1-4ccf-b4ea-0f4699c8cac6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[272803, 5943, 590, 16, 30, "ItemNumbered",ExpressionUUID->"89870d04-fa75-48a0-a50f-ba3a90251f67"],
Cell[273396, 5961, 587, 18, 29, "Input",ExpressionUUID->"ddbbbe62-c23f-420a-9e99-0d126926773c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[274020, 5984, 801, 20, 31, "ItemNumbered",ExpressionUUID->"4633cc8a-a6a8-47d5-be7f-2ecd5ad6e40a"],
Cell[274824, 6006, 1454, 37, 70, "Input",ExpressionUUID->"98a8dfaf-8c83-4a85-9763-f5f16aabf9b7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[276315, 6048, 887, 21, 30, "ItemNumbered",ExpressionUUID->"a482f7ed-5963-459e-8b23-d975ef33e95c"],
Cell[277205, 6071, 989, 31, 70, "Input",ExpressionUUID->"e370db2f-4f6a-4d42-a22b-12564f2c1345"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

